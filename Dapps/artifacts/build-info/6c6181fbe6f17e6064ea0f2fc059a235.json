{
	"id": "6c6181fbe6f17e6064ea0f2fc059a235",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Dapps/Staking.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.6;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n\nerror TransferFailed();\nerror NeedsMoreThanZero();\ncontract staking is ReentrancyGuard{ \n    IERC20 public s_stakingToken;  // s_ for storage \n    IERC20 public s_rewardsToken;\n\n    // this is rewqard token per second\n\n    uint256 public constant REWARD_RATE=100;\n    uint256 public s_lastUpdateTime;\n    uint256 public s_rewarPerTokenStored;\n\n\n    mapping(address => uint256) public s_userRewardPerTokenPaid;\n    mapping(address => uint256) public s_rewards;\n\n    uint256 private s_totalSupply;\n\n    mapping(address => uint256) public s_balaces;\n\n    event Staked(address indexed user, uint256 indexed amount);\n    event withdrewStake(address indexed user, uint256 indexed amount);\n    event RewardsClaimed(address indexed user, uint256 indexed amount);\n\n    constructor(address stakingToken, address rewardsToken) {\n        // IERC20 is skelton\n        s_stakingToken = IERC20(stakingToken);\n        s_rewardsToken = IERC20(rewardsToken);\n    }\n    \n    // how much reward per token get based on how long its been in the contract\n    function rewardPerToken() public view returns(uint256) {\n        if(s_totalSupply == 0) {\n            return s_rewarPerTokenStored;\n        }\n\n        return s_rewarPerTokenStored+(((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply);\n        /* dayanmic reward calculator\n            A stake -- 1 Jan \n            claim reward o JAN 20 \n            if annual IR = 20% | 366 - 20%  \n        */\n    }\n\n    function earned(address account) public view returns(uint256) {\n        return ((s_balaces[account]*(rewardPerToken() - s_userRewardPerTokenPaid[account]))/1e18) + s_rewards[account];\n\n        /**\n        satked = 100 \n        rewared = 20 \n        total = 120 \n        profit  = 120 - 100 \n        */\n    }\n\n\n    function stake(uint256 amount) external updateReward(msg.sender) nonReentrant moreThanZero(amount) {\n        s_totalSupply+=amount;\n        s_balaces[msg.sender]+=amount;\n        emit Staked(msg.sender, amount);\n        bool success = s_stakingToken.transfer(address(this), amount);\n        if(!success) {\n            revert TransferFailed();\n        }\n    }\n\n    function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender) {\n        s_totalSupply-=amount;\n        s_balaces[msg.sender] -= amount;\n        emit withdrewStake(msg.sender, amount);\n        bool success = s_stakingToken.transfer(msg.sender, amount);\n        if(!success) {\n            revert TransferFailed();\n        }\n    }\n\n    function claimReward() external  nonReentrant updateReward(msg.sender) {\n        uint256 reward  =s_rewards[msg.sender];\n        s_rewards[msg.sender] = 0;\n        emit RewardsClaimed(msg.sender, reward);\n        bool success = s_rewardsToken.transfer(msg.sender, reward);\n        if(!success) {\n            revert TransferFailed();\n        }\n    }\n\n    modifier updateReward(address account) {\n        s_rewarPerTokenStored = rewardPerToken();\n        s_lastUpdateTime = block.timestamp;\n        s_rewards[account] = earned(account);\n        s_userRewardPerTokenPaid[account] = s_rewarPerTokenStored;\n        _;\n    }\n\n    modifier moreThanZero(uint256 amount) {\n        if(amount == 0) {\n            revert NeedsMoreThanZero();\n        }\n        _;\n    }\n\n    function getStaked(address account) public view returns (uint256) {\n        return s_balaces[account];\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 250
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 224,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 230,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 232,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 234,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Dapps/Staking.sol": {
				"staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakingToken",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardsToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "NeedsMoreThanZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrewStake",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "REWARD_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_balaces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewarPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "s_stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "s_userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Dapps/Staking.sol\":288:3596  contract staking is ReentrancyGuard{ ... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Dapps/Staking.sol\":997:1183  constructor(address stakingToken, address rewardsToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Dapps/Staking.sol\":1092:1129  s_stakingToken = IERC20(stakingToken) */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  swap4\n  dup5\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap2\n  dup3\n  and\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Dapps/Staking.sol\":1139:1153  s_rewardsToken */\n  0x02\n    /* \"contracts/Dapps/Staking.sol\":1139:1176  s_rewardsToken = IERC20(rewardsToken) */\n  dup1\n  sload\n  swap3\n  swap1\n  swap4\n  and\n  swap2\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Dapps/Staking.sol\":288:3596  contract staking is ReentrancyGuard{ ... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:191   */\ntag_9:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_12:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_14:\n    /* \"#utility.yul\":375:415   */\n  tag_15\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_9\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_16\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_10:\n    /* \"contracts/Dapps/Staking.sol\":288:3596  contract staking is ReentrancyGuard{ ... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Dapps/Staking.sol\":288:3596  contract staking is ReentrancyGuard{ ... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa694fc3a\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xbea08151\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xbea08151\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xcd3daf9d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf245ace4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf43630bd\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xadca9b72\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xb88a802f\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x2e1a7d4d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x399080ec\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5997bb37\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6aa0838f\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0bd21c56\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x211f6ce1\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Dapps/Staking.sol\":1694:2001  function earned(address account) public view returns(uint256) {... */\n    tag_3:\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":474:499   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":462:464   */\n      0x20\n        /* \"#utility.yul\":447:465   */\n      add\n        /* \"contracts/Dapps/Staking.sol\":1694:2001  function earned(address account) public view returns(uint256) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Dapps/Staking.sol\":384:412  IERC20 public s_rewardsToken */\n    tag_4:\n      sload(0x02)\n      tag_26\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_26:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":688:743   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":670:744   */\n      dup2\n      mstore\n        /* \"#utility.yul\":658:660   */\n      0x20\n        /* \"#utility.yul\":643:661   */\n      add\n        /* \"contracts/Dapps/Staking.sol\":384:412  IERC20 public s_rewardsToken */\n      tag_24\n        /* \"#utility.yul\":510:750   */\n      jump\n        /* \"contracts/Dapps/Staking.sol\":542:578  uint256 public s_rewarPerTokenStored */\n    tag_5:\n      tag_20\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":2372:2718  function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_6:\n      tag_33\n      tag_34\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      stop\n        /* \"contracts/Dapps/Staking.sol\":3486:3594  function getStaked(address account) public view returns (uint256) {... */\n    tag_7:\n      tag_20\n      tag_38\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":3569:3587  s_balaces[account] */\n      and\n        /* \"contracts/Dapps/Staking.sol\":3543:3550  uint256 */\n      0x00\n        /* \"contracts/Dapps/Staking.sol\":3569:3587  s_balaces[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":3569:3578  s_balaces */\n      0x08\n        /* \"contracts/Dapps/Staking.sol\":3569:3587  s_balaces[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":3486:3594  function getStaked(address account) public view returns (uint256) {... */\n      jump\n        /* \"contracts/Dapps/Staking.sol\":460:499  uint256 public constant REWARD_RATE=100 */\n    tag_8:\n      tag_20\n        /* \"contracts/Dapps/Staking.sol\":496:499  100 */\n      0x64\n        /* \"contracts/Dapps/Staking.sol\":460:499  uint256 public constant REWARD_RATE=100 */\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":505:536  uint256 public s_lastUpdateTime */\n    tag_9:\n      tag_20\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":2008:2366  function stake(uint256 amount) external updateReward(msg.sender) nonReentrant moreThanZero(amount) {... */\n    tag_10:\n      tag_33\n      tag_48\n      calldatasize\n      0x04\n      tag_35\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n        /* \"contracts/Dapps/Staking.sol\":330:358  IERC20 public s_stakingToken */\n    tag_11:\n      sload(0x01)\n      tag_26\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":2724:3072  function claimReward() external  nonReentrant updateReward(msg.sender) {... */\n    tag_12:\n      tag_33\n      tag_54\n      jump\t// in\n        /* \"contracts/Dapps/Staking.sol\":651:695  mapping(address => uint256) public s_rewards */\n    tag_13:\n      tag_20\n      tag_56\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_56:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":1273:1688  function rewardPerToken() public view returns(uint256) {... */\n    tag_14:\n      tag_20\n      tag_60\n      jump\t// in\n        /* \"contracts/Dapps/Staking.sol\":586:645  mapping(address => uint256) public s_userRewardPerTokenPaid */\n    tag_15:\n      tag_20\n      tag_63\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_63:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":738:782  mapping(address => uint256) public s_balaces */\n    tag_16:\n      tag_20\n      tag_67\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_67:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Dapps/Staking.sol\":1694:2001  function earned(address account) public view returns(uint256) {... */\n    tag_23:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":1858:1876  s_rewards[account] */\n      dup2\n      and\n        /* \"contracts/Dapps/Staking.sol\":1747:1754  uint256 */\n      0x00\n        /* \"contracts/Dapps/Staking.sol\":1858:1876  s_rewards[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":1858:1867  s_rewards */\n      0x06\n        /* \"contracts/Dapps/Staking.sol\":1858:1876  s_rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/Dapps/Staking.sol\":1814:1838  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Dapps/Staking.sol\":1814:1847  s_userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Dapps/Staking.sol\":1850:1854  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":1795:1811  rewardPerToken() */\n      tag_71\n        /* \"contracts/Dapps/Staking.sol\":1795:1809  rewardPerToken */\n      tag_60\n        /* \"contracts/Dapps/Staking.sol\":1795:1811  rewardPerToken() */\n      jump\t// in\n    tag_71:\n        /* \"contracts/Dapps/Staking.sol\":1795:1847  rewardPerToken() - s_userRewardPerTokenPaid[account] */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":1775:1793  s_balaces[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":1775:1784  s_balaces */\n      0x08\n        /* \"contracts/Dapps/Staking.sol\":1775:1793  s_balaces[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Dapps/Staking.sol\":1775:1848  s_balaces[account]*(rewardPerToken() - s_userRewardPerTokenPaid[account]) */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/Dapps/Staking.sol\":1774:1854  (s_balaces[account]*(rewardPerToken() - s_userRewardPerTokenPaid[account]))/1e18 */\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"contracts/Dapps/Staking.sol\":1773:1876  ((s_balaces[account]*(rewardPerToken() - s_userRewardPerTokenPaid[account]))/1e18) + s_rewards[account] */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/Dapps/Staking.sol\":1766:1876  return ((s_balaces[account]*(rewardPerToken() - s_userRewardPerTokenPaid[account]))/1e18) + s_rewards[account] */\n      swap3\n        /* \"contracts/Dapps/Staking.sol\":1694:2001  function earned(address account) public view returns(uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dapps/Staking.sol\":2372:2718  function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_81\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_81:\n        /* \"contracts/Dapps/Staking.sol\":2441:2451  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":3151:3167  rewardPerToken() */\n      tag_84\n        /* \"contracts/Dapps/Staking.sol\":3151:3165  rewardPerToken */\n      tag_60\n        /* \"contracts/Dapps/Staking.sol\":3151:3167  rewardPerToken() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/Dapps/Staking.sol\":3127:3148  s_rewarPerTokenStored */\n      0x04\n        /* \"contracts/Dapps/Staking.sol\":3127:3167  s_rewarPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3196:3211  block.timestamp */\n      timestamp\n        /* \"contracts/Dapps/Staking.sol\":3177:3193  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Dapps/Staking.sol\":3177:3211  s_lastUpdateTime = block.timestamp */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3242:3257  earned(account) */\n      tag_85\n        /* \"contracts/Dapps/Staking.sol\":3249:3256  account */\n      dup2\n        /* \"contracts/Dapps/Staking.sol\":3242:3248  earned */\n      tag_23\n        /* \"contracts/Dapps/Staking.sol\":3242:3257  earned(account) */\n      jump\t// in\n    tag_85:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":3221:3230  s_rewards */\n      0x06\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":3221:3257  s_rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3303:3324  s_rewarPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Dapps/Staking.sol\":3267:3291  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Dapps/Staking.sol\":3267:3300  s_userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      dup2\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":3267:3324  s_userRewardPerTokenPaid[account] = s_rewarPerTokenStored */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":2463:2476  s_totalSupply */\n      0x07\n        /* \"contracts/Dapps/Staking.sol\":2463:2484  s_totalSupply-=amount */\n      dup1\n      sload\n        /* \"contracts/Dapps/Staking.sol\":2478:2484  amount */\n      dup5\n      swap3\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2463:2484  s_totalSupply-=amount */\n      tag_87\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2478:2484  amount */\n      dup5\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2463:2484  s_totalSupply-=amount */\n      tag_73\n      jump\t// in\n    tag_87:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Dapps/Staking.sol\":2504:2514  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":2494:2515  s_balaces[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2494:2503  s_balaces */\n      0x08\n        /* \"contracts/Dapps/Staking.sol\":2494:2515  s_balaces[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":2494:2525  s_balaces[msg.sender] -= amount */\n      dup1\n      sload\n        /* \"contracts/Dapps/Staking.sol\":2519:2525  amount */\n      dup5\n      swap3\n        /* \"contracts/Dapps/Staking.sol\":2494:2515  s_balaces[msg.sender] */\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2494:2525  s_balaces[msg.sender] -= amount */\n      tag_88\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2519:2525  amount */\n      dup5\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2494:2525  s_balaces[msg.sender] -= amount */\n      tag_73\n      jump\t// in\n    tag_88:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Dapps/Staking.sol\":2540:2573  withdrewStake(msg.sender, amount) */\n      mload(0x40)\n        /* \"contracts/Dapps/Staking.sol\":2566:2572  amount */\n      dup3\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2554:2564  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2540:2573  withdrewStake(msg.sender, amount) */\n      0xfaf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf4\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/Dapps/Staking.sol\":2598:2612  s_stakingToken */\n      sload(0x01)\n        /* \"contracts/Dapps/Staking.sol\":2598:2641  s_stakingToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2622:2632  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":2598:2641  s_stakingToken.transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1904:1978   */\n      mstore\n        /* \"#utility.yul\":1994:2012   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1987:2021   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2583:2595  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":2598:2612  s_stakingToken */\n      and\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2598:2621  s_stakingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1877:1895   */\n      0x44\n      add\n        /* \"contracts/Dapps/Staking.sol\":2598:2641  s_stakingToken.transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"contracts/Dapps/Staking.sol\":2583:2641  bool success = s_stakingToken.transfer(msg.sender, amount) */\n      swap1\n      pop\n        /* \"contracts/Dapps/Staking.sol\":2655:2662  success */\n      dup1\n        /* \"contracts/Dapps/Staking.sol\":2651:2712  if(!success) {... */\n      tag_95\n      jumpi\n        /* \"contracts/Dapps/Staking.sol\":2685:2701  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Dapps/Staking.sol\":2651:2712  if(!success) {... */\n    tag_95:\n        /* \"contracts/Dapps/Staking.sol\":2453:2718  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_96\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_96:\n        /* \"contracts/Dapps/Staking.sol\":2372:2718  function withdraw(uint256 amount) external nonReentrant updateReward(msg.sender) {... */\n      pop\n      jump\t// out\n        /* \"contracts/Dapps/Staking.sol\":2008:2366  function stake(uint256 amount) external updateReward(msg.sender) nonReentrant moreThanZero(amount) {... */\n    tag_49:\n        /* \"contracts/Dapps/Staking.sol\":2061:2071  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":3151:3167  rewardPerToken() */\n      tag_100\n        /* \"contracts/Dapps/Staking.sol\":3151:3165  rewardPerToken */\n      tag_60\n        /* \"contracts/Dapps/Staking.sol\":3151:3167  rewardPerToken() */\n      jump\t// in\n    tag_100:\n        /* \"contracts/Dapps/Staking.sol\":3127:3148  s_rewarPerTokenStored */\n      0x04\n        /* \"contracts/Dapps/Staking.sol\":3127:3167  s_rewarPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3196:3211  block.timestamp */\n      timestamp\n        /* \"contracts/Dapps/Staking.sol\":3177:3193  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Dapps/Staking.sol\":3177:3211  s_lastUpdateTime = block.timestamp */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3242:3257  earned(account) */\n      tag_101\n        /* \"contracts/Dapps/Staking.sol\":3249:3256  account */\n      dup2\n        /* \"contracts/Dapps/Staking.sol\":3242:3248  earned */\n      tag_23\n        /* \"contracts/Dapps/Staking.sol\":3242:3257  earned(account) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":3221:3230  s_rewards */\n      0x06\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":3221:3257  s_rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3303:3324  s_rewarPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Dapps/Staking.sol\":3267:3291  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Dapps/Staking.sol\":3267:3300  s_userRewardPerTokenPaid[account] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":3267:3324  s_userRewardPerTokenPaid[account] = s_rewarPerTokenStored */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_103\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/Dapps/Staking.sol\":2099:2105  amount */\n      dup2\n        /* \"contracts/Dapps/Staking.sol\":3399:3405  amount */\n      dup1\n        /* \"contracts/Dapps/Staking.sol\":3409:3410  0 */\n      0x00\n        /* \"contracts/Dapps/Staking.sol\":3399:3410  amount == 0 */\n      sub\n        /* \"contracts/Dapps/Staking.sol\":3396:3463  if(amount == 0) {... */\n      tag_105\n      jumpi\n        /* \"contracts/Dapps/Staking.sol\":3433:3452  NeedsMoreThanZero() */\n      mload(0x40)\n      shl(0xe4, 0x0f45911f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Dapps/Staking.sol\":3396:3463  if(amount == 0) {... */\n    tag_105:\n        /* \"contracts/Dapps/Staking.sol\":2132:2138  amount */\n      dup3\n        /* \"contracts/Dapps/Staking.sol\":2117:2130  s_totalSupply */\n      0x07\n      0x00\n        /* \"contracts/Dapps/Staking.sol\":2117:2138  s_totalSupply+=amount */\n      dup3\n      dup3\n      sload\n      tag_107\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_107:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Dapps/Staking.sol\":2158:2168  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":2148:2169  s_balaces[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2148:2157  s_balaces */\n      0x08\n        /* \"contracts/Dapps/Staking.sol\":2148:2169  s_balaces[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":2148:2177  s_balaces[msg.sender]+=amount */\n      dup1\n      sload\n        /* \"contracts/Dapps/Staking.sol\":2171:2177  amount */\n      dup6\n      swap3\n        /* \"contracts/Dapps/Staking.sol\":2148:2169  s_balaces[msg.sender] */\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2148:2177  s_balaces[msg.sender]+=amount */\n      tag_108\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2171:2177  amount */\n      dup5\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2148:2177  s_balaces[msg.sender]+=amount */\n      tag_79\n      jump\t// in\n    tag_108:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Dapps/Staking.sol\":2192:2218  Staked(msg.sender, amount) */\n      mload(0x40)\n        /* \"contracts/Dapps/Staking.sol\":2211:2217  amount */\n      dup4\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2199:2209  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2192:2218  Staked(msg.sender, amount) */\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/Dapps/Staking.sol\":2243:2257  s_stakingToken */\n      sload(0x01)\n        /* \"contracts/Dapps/Staking.sol\":2243:2289  s_stakingToken.transfer(address(this), amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2275:2279  this */\n      address\n        /* \"contracts/Dapps/Staking.sol\":2243:2289  s_stakingToken.transfer(address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1904:1978   */\n      mstore\n        /* \"#utility.yul\":1994:2012   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1987:2021   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2228:2240  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":2243:2257  s_stakingToken */\n      and\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2243:2266  s_stakingToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1877:1895   */\n      0x44\n      add\n        /* \"contracts/Dapps/Staking.sol\":2243:2289  s_stakingToken.transfer(address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_112:\n        /* \"contracts/Dapps/Staking.sol\":2228:2289  bool success = s_stakingToken.transfer(address(this), amount) */\n      swap1\n      pop\n        /* \"contracts/Dapps/Staking.sol\":2303:2310  success */\n      dup1\n        /* \"contracts/Dapps/Staking.sol\":2299:2360  if(!success) {... */\n      tag_113\n      jumpi\n        /* \"contracts/Dapps/Staking.sol\":2333:2349  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Dapps/Staking.sol\":2299:2360  if(!success) {... */\n    tag_113:\n        /* \"contracts/Dapps/Staking.sol\":2107:2366  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_114:\n        /* \"contracts/Dapps/Staking.sol\":2008:2366  function stake(uint256 amount) external updateReward(msg.sender) nonReentrant moreThanZero(amount) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Dapps/Staking.sol\":2724:3072  function claimReward() external  nonReentrant updateReward(msg.sender) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_116\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_82\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_116:\n        /* \"contracts/Dapps/Staking.sol\":2783:2793  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":3151:3167  rewardPerToken() */\n      tag_118\n        /* \"contracts/Dapps/Staking.sol\":3151:3165  rewardPerToken */\n      tag_60\n        /* \"contracts/Dapps/Staking.sol\":3151:3167  rewardPerToken() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/Dapps/Staking.sol\":3127:3148  s_rewarPerTokenStored */\n      0x04\n        /* \"contracts/Dapps/Staking.sol\":3127:3167  s_rewarPerTokenStored = rewardPerToken() */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3196:3211  block.timestamp */\n      timestamp\n        /* \"contracts/Dapps/Staking.sol\":3177:3193  s_lastUpdateTime */\n      0x03\n        /* \"contracts/Dapps/Staking.sol\":3177:3211  s_lastUpdateTime = block.timestamp */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3242:3257  earned(account) */\n      tag_119\n        /* \"contracts/Dapps/Staking.sol\":3249:3256  account */\n      dup2\n        /* \"contracts/Dapps/Staking.sol\":3242:3248  earned */\n      tag_23\n        /* \"contracts/Dapps/Staking.sol\":3242:3257  earned(account) */\n      jump\t// in\n    tag_119:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":3221:3230  s_rewards */\n      0x06\n        /* \"contracts/Dapps/Staking.sol\":3221:3239  s_rewards[account] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":3221:3257  s_rewards[account] = earned(account) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":3303:3324  s_rewarPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Dapps/Staking.sol\":3267:3291  s_userRewardPerTokenPaid */\n      0x05\n        /* \"contracts/Dapps/Staking.sol\":3267:3300  s_userRewardPerTokenPaid[account] */\n      dup3\n      mstore\n      dup5\n      dup5\n      keccak256\n        /* \"contracts/Dapps/Staking.sol\":3267:3324  s_userRewardPerTokenPaid[account] = s_rewarPerTokenStored */\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":2832:2842  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":2822:2843  s_rewards[msg.sender] */\n      dup1\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      dup3\n      dup3\n      keccak256\n      dup1\n      sload\n        /* \"contracts/Dapps/Staking.sol\":2853:2878  s_rewards[msg.sender] = 0 */\n      swap1\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Dapps/Staking.sol\":2893:2927  RewardsClaimed(msg.sender, reward) */\n      swap3\n      mload\n        /* \"contracts/Dapps/Staking.sol\":2822:2843  s_rewards[msg.sender] */\n      dup4\n      swap3\n        /* \"contracts/Dapps/Staking.sol\":2893:2927  RewardsClaimed(msg.sender, reward) */\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n      swap2\n      log3\n        /* \"contracts/Dapps/Staking.sol\":2952:2966  s_rewardsToken */\n      sload(0x02)\n        /* \"contracts/Dapps/Staking.sol\":2952:2995  s_rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2976:2986  msg.sender */\n      caller\n        /* \"contracts/Dapps/Staking.sol\":2952:2995  s_rewardsToken.transfer(msg.sender, reward) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1904:1978   */\n      mstore\n        /* \"#utility.yul\":1994:2012   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":1987:2021   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Dapps/Staking.sol\":2937:2949  bool success */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Dapps/Staking.sol\":2952:2966  s_rewardsToken */\n      and\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":2952:2975  s_rewardsToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":1877:1895   */\n      0x44\n      add\n        /* \"contracts/Dapps/Staking.sol\":2952:2995  s_rewardsToken.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_123\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_124\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_124:\n        /* \"contracts/Dapps/Staking.sol\":2937:2995  bool success = s_rewardsToken.transfer(msg.sender, reward) */\n      swap1\n      pop\n        /* \"contracts/Dapps/Staking.sol\":3009:3016  success */\n      dup1\n        /* \"contracts/Dapps/Staking.sol\":3005:3066  if(!success) {... */\n      tag_125\n      jumpi\n        /* \"contracts/Dapps/Staking.sol\":3039:3055  TransferFailed() */\n      mload(0x40)\n      shl(0xe3, 0x12171d83)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Dapps/Staking.sol\":3005:3066  if(!success) {... */\n    tag_125:\n        /* \"contracts/Dapps/Staking.sol\":2795:3072  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_126\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_126:\n        /* \"contracts/Dapps/Staking.sol\":2724:3072  function claimReward() external  nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"contracts/Dapps/Staking.sol\":1273:1688  function rewardPerToken() public view returns(uint256) {... */\n    tag_60:\n        /* \"contracts/Dapps/Staking.sol\":1319:1326  uint256 */\n      0x00\n        /* \"contracts/Dapps/Staking.sol\":1341:1354  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/Dapps/Staking.sol\":1358:1359  0 */\n      0x00\n        /* \"contracts/Dapps/Staking.sol\":1341:1359  s_totalSupply == 0 */\n      sub\n        /* \"contracts/Dapps/Staking.sol\":1338:1414  if(s_totalSupply == 0) {... */\n      tag_128\n      jumpi\n      pop\n        /* \"contracts/Dapps/Staking.sol\":1382:1403  s_rewarPerTokenStored */\n      sload(0x04)\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":1273:1688  function rewardPerToken() public view returns(uint256) {... */\n      jump\t// out\n        /* \"contracts/Dapps/Staking.sol\":1338:1414  if(s_totalSupply == 0) {... */\n    tag_128:\n        /* \"contracts/Dapps/Staking.sol\":1508:1521  s_totalSupply */\n      sload(0x07)\n        /* \"contracts/Dapps/Staking.sol\":496:499  100 */\n      0x64\n        /* \"contracts/Dapps/Staking.sol\":1472:1488  s_lastUpdateTime */\n      sload(0x03)\n        /* \"contracts/Dapps/Staking.sol\":1456:1471  block.timestamp */\n      timestamp\n        /* \"contracts/Dapps/Staking.sol\":1456:1488  block.timestamp-s_lastUpdateTime */\n      tag_129\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_129:\n        /* \"contracts/Dapps/Staking.sol\":1455:1501  (block.timestamp-s_lastUpdateTime)*REWARD_RATE */\n      tag_130\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_130:\n        /* \"contracts/Dapps/Staking.sol\":1455:1506  (block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18 */\n      tag_131\n      swap1\n        /* \"contracts/Dapps/Staking.sol\":1502:1506  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/Dapps/Staking.sol\":1455:1506  (block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18 */\n      tag_75\n      jump\t// in\n    tag_131:\n        /* \"contracts/Dapps/Staking.sol\":1454:1521  ((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply */\n      tag_132\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_132:\n        /* \"contracts/Dapps/Staking.sol\":1431:1452  s_rewarPerTokenStored */\n      sload(0x04)\n        /* \"contracts/Dapps/Staking.sol\":1431:1522  s_rewarPerTokenStored+(((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply) */\n      tag_133\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_133:\n        /* \"contracts/Dapps/Staking.sol\":1424:1522  return s_rewarPerTokenStored+(((block.timestamp-s_lastUpdateTime)*REWARD_RATE*1e18)/s_totalSupply) */\n      swap1\n      pop\n        /* \"contracts/Dapps/Staking.sol\":1273:1688  function rewardPerToken() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2516:2518   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2498:2519   */\n      mstore\n        /* \"#utility.yul\":2555:2557   */\n      0x1f\n        /* \"#utility.yul\":2535:2553   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2528:2558   */\n      mstore\n        /* \"#utility.yul\":2594:2627   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":2574:2592   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2567:2628   */\n      mstore\n        /* \"#utility.yul\":2645:2663   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"#utility.yul\":14:323   */\n    tag_22:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_142\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_142:\n        /* \"#utility.yul\":181:190   */\n      dup2\n        /* \"#utility.yul\":168:191   */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":224:229   */\n      dup2\n        /* \"#utility.yul\":220:274   */\n      and\n        /* \"#utility.yul\":213:218   */\n      dup2\n        /* \"#utility.yul\":210:275   */\n      eq\n        /* \"#utility.yul\":200:293   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":289:290   */\n      0x00\n        /* \"#utility.yul\":286:287   */\n      dup1\n        /* \"#utility.yul\":279:291   */\n      revert\n        /* \"#utility.yul\":200:293   */\n    tag_143:\n        /* \"#utility.yul\":312:317   */\n      swap4\n        /* \"#utility.yul\":14:323   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":755:935   */\n    tag_35:\n        /* \"#utility.yul\":814:820   */\n      0x00\n        /* \"#utility.yul\":867:869   */\n      0x20\n        /* \"#utility.yul\":855:864   */\n      dup3\n        /* \"#utility.yul\":846:853   */\n      dup5\n        /* \"#utility.yul\":842:865   */\n      sub\n        /* \"#utility.yul\":838:870   */\n      slt\n        /* \"#utility.yul\":835:887   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":880:881   */\n      dup1\n        /* \"#utility.yul\":873:885   */\n      revert\n        /* \"#utility.yul\":835:887   */\n    tag_147:\n      pop\n        /* \"#utility.yul\":906:929   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":755:935   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":940:1067   */\n    tag_139:\n        /* \"#utility.yul\":1001:1011   */\n      0x4e487b71\n        /* \"#utility.yul\":996:999   */\n      0xe0\n        /* \"#utility.yul\":992:1012   */\n      shl\n        /* \"#utility.yul\":989:990   */\n      0x00\n        /* \"#utility.yul\":982:1013   */\n      mstore\n        /* \"#utility.yul\":1032:1036   */\n      0x11\n        /* \"#utility.yul\":1029:1030   */\n      0x04\n        /* \"#utility.yul\":1022:1037   */\n      mstore\n        /* \"#utility.yul\":1056:1060   */\n      0x24\n        /* \"#utility.yul\":1053:1054   */\n      0x00\n        /* \"#utility.yul\":1046:1061   */\n      revert\n        /* \"#utility.yul\":1072:1200   */\n    tag_73:\n        /* \"#utility.yul\":1139:1148   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":1160:1171   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":1157:1194   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1174:1192   */\n      tag_78\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":1205:1373   */\n    tag_75:\n        /* \"#utility.yul\":1278:1287   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":1309:1318   */\n      dup2\n      iszero\n        /* \"#utility.yul\":1326:1341   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":1320:1342   */\n      dup5\n      eq\n        /* \"#utility.yul\":1306:1343   */\n      or\n        /* \"#utility.yul\":1296:1367   */\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1347:1365   */\n      tag_78\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":1378:1595   */\n    tag_77:\n        /* \"#utility.yul\":1418:1419   */\n      0x00\n        /* \"#utility.yul\":1444:1445   */\n      dup3\n        /* \"#utility.yul\":1434:1566   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":1488:1498   */\n      0x4e487b71\n        /* \"#utility.yul\":1483:1486   */\n      0xe0\n        /* \"#utility.yul\":1479:1499   */\n      shl\n        /* \"#utility.yul\":1476:1477   */\n      0x00\n        /* \"#utility.yul\":1469:1500   */\n      mstore\n        /* \"#utility.yul\":1523:1527   */\n      0x12\n        /* \"#utility.yul\":1520:1521   */\n      0x04\n        /* \"#utility.yul\":1513:1528   */\n      mstore\n        /* \"#utility.yul\":1551:1555   */\n      0x24\n        /* \"#utility.yul\":1548:1549   */\n      0x00\n        /* \"#utility.yul\":1541:1556   */\n      revert\n        /* \"#utility.yul\":1434:1566   */\n    tag_156:\n      pop\n        /* \"#utility.yul\":1580:1589   */\n      div\n      swap1\n        /* \"#utility.yul\":1378:1595   */\n      jump\t// out\n        /* \"#utility.yul\":1600:1725   */\n    tag_79:\n        /* \"#utility.yul\":1665:1674   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":1686:1696   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1683:1719   */\n      iszero\n      tag_78\n      jumpi\n        /* \"#utility.yul\":1699:1717   */\n      tag_78\n      tag_139\n      jump\t// in\n        /* \"#utility.yul\":2032:2309   */\n    tag_94:\n        /* \"#utility.yul\":2099:2105   */\n      0x00\n        /* \"#utility.yul\":2152:2154   */\n      0x20\n        /* \"#utility.yul\":2140:2149   */\n      dup3\n        /* \"#utility.yul\":2131:2138   */\n      dup5\n        /* \"#utility.yul\":2127:2150   */\n      sub\n        /* \"#utility.yul\":2123:2155   */\n      slt\n        /* \"#utility.yul\":2120:2172   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2165:2166   */\n      dup1\n        /* \"#utility.yul\":2158:2170   */\n      revert\n        /* \"#utility.yul\":2120:2172   */\n    tag_162:\n        /* \"#utility.yul\":2200:2209   */\n      dup2\n        /* \"#utility.yul\":2194:2210   */\n      mload\n        /* \"#utility.yul\":2253:2258   */\n      dup1\n        /* \"#utility.yul\":2246:2259   */\n      iszero\n        /* \"#utility.yul\":2239:2260   */\n      iszero\n        /* \"#utility.yul\":2232:2237   */\n      dup2\n        /* \"#utility.yul\":2229:2261   */\n      eq\n        /* \"#utility.yul\":2219:2279   */\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2275:2276   */\n      0x00\n        /* \"#utility.yul\":2272:2273   */\n      dup1\n        /* \"#utility.yul\":2265:2277   */\n      revert\n\n    auxdata: 0xa26469706673582212205beff84cecf97a9b8b63f6f0edcb1bc1375ac9badd612c2c4967a341698ee5d364736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_925": {
									"entryPoint": null,
									"id": 925,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:491:7",
										"nodeType": "YulBlock",
										"src": "0:491:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:7",
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nativeSrc": "84:22:7",
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nativeSrc": "93:13:7",
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:7",
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:7",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:7",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nativeSrc": "171:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nativeSrc": "171:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:7",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:7",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nativeSrc": "150:11:7",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:7",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nativeSrc": "146:19:7",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nativeSrc": "135:31:7",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nativeSrc": "125:42:7",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nativeSrc": "118:50:7",
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nativeSrc": "115:70:7",
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:7",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:7",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nativeSrc": "294:195:7",
													"nodeType": "YulBlock",
													"src": "294:195:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:7",
																"nodeType": "YulBlock",
																"src": "340:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:7",
																					"nodeType": "YulLiteral",
																					"src": "349:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:7",
																					"nodeType": "YulLiteral",
																					"src": "352:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:7"
																			},
																			"nativeSrc": "342:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:7"
																		},
																		"nativeSrc": "342:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:7"
																		},
																		"nativeSrc": "311:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "336:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:7"
																},
																"nativeSrc": "307:32:7",
																"nodeType": "YulFunctionCall",
																"src": "307:32:7"
															},
															"nativeSrc": "304:52:7",
															"nodeType": "YulIf",
															"src": "304:52:7"
														},
														{
															"nativeSrc": "365:50:7",
															"nodeType": "YulAssignment",
															"src": "365:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:7"
																},
																"nativeSrc": "375:40:7",
																"nodeType": "YulFunctionCall",
																"src": "375:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:7"
																}
															]
														},
														{
															"nativeSrc": "424:59:7",
															"nodeType": "YulAssignment",
															"src": "424:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:7",
																				"nodeType": "YulLiteral",
																				"src": "479:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:7"
																		},
																		"nativeSrc": "464:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:7",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:7"
																},
																"nativeSrc": "434:49:7",
																"nodeType": "YulFunctionCall",
																"src": "434:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:7",
														"nodeType": "YulTypedName",
														"src": "252:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:7",
														"nodeType": "YulTypedName",
														"src": "263:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:7",
														"nodeType": "YulTypedName",
														"src": "275:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:7",
														"nodeType": "YulTypedName",
														"src": "283:6:7",
														"type": ""
													}
												],
												"src": "196:293:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060405161090138038061090183398101604081905261002e9161007e565b60015f81905580546001600160a01b039384166001600160a01b031991821617909155600280549290931691161790556100af565b80516001600160a01b0381168114610079575f80fd5b919050565b5f806040838503121561008f575f80fd5b61009883610063565b91506100a660208401610063565b90509250929050565b610845806100bc5f395ff3fe608060405234801561000f575f80fd5b50600436106100e4575f3560e01c8063a694fc3a11610088578063bea0815111610063578063bea08151146101be578063cd3daf9d146101dd578063f245ace4146101e5578063f43630bd14610204575f80fd5b8063a694fc3a14610190578063adca9b72146101a3578063b88a802f146101b6575f80fd5b80632e1a7d4d116100c35780632e1a7d4d14610142578063399080ec146101575780635997bb371461017f5780636aa0838f14610187575f80fd5b80628cc262146100e85780630bd21c561461010e578063211f6ce114610139575b5f80fd5b6100fb6100f636600461073c565b610223565b6040519081526020015b60405180910390f35b600254610121906001600160a01b031681565b6040516001600160a01b039091168152602001610105565b6100fb60045481565b610155610150366004610769565b61029e565b005b6100fb61016536600461073c565b6001600160a01b03165f9081526008602052604090205490565b6100fb606481565b6100fb60035481565b61015561019e366004610769565b6103f2565b600154610121906001600160a01b031681565b610155610564565b6100fb6101cc36600461073c565b60066020525f908152604090205481565b6100fb610685565b6100fb6101f336600461073c565b60056020525f908152604090205481565b6100fb61021236600461073c565b60086020525f908152604090205481565b6001600160a01b0381165f908152600660209081526040808320546005909252822054670de0b6b3a764000090610258610685565b6102629190610794565b6001600160a01b0385165f9081526008602052604090205461028491906107a7565b61028e91906107be565b61029891906107dd565b92915050565b6102a66106e1565b336102af610685565b600455426003556102bf81610223565b6001600160a01b0382165f90815260066020908152604080832093909355600454600590915291812091909155600780548492906102fe908490610794565b9091555050335f9081526008602052604081208054849290610321908490610794565b9091555050604051829033907ffaf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf4905f90a360015460405163a9059cbb60e01b8152336004820152602481018490525f916001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156103a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c491906107f0565b9050806103e4576040516312171d8360e31b815260040160405180910390fd5b50506103ef60015f55565b50565b336103fb610685565b6004554260035561040b81610223565b6001600160a01b0382165f9081526006602090815260408083209390935560045460059091529190205561043d6106e1565b81805f0361045e57604051630f45911f60e41b815260040160405180910390fd5b8260075f82825461046f91906107dd565b9091555050335f90815260086020526040812080548592906104929084906107dd565b9091555050604051839033907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d905f90a360015460405163a9059cbb60e01b8152306004820152602481018590525f916001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610511573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053591906107f0565b905080610555576040516312171d8360e31b815260040160405180910390fd5b505061056060015f55565b5050565b61056c6106e1565b33610575610685565b6004554260035561058581610223565b6001600160a01b0382165f90815260066020818152604080842094909455600454600582528484205533808452919052828220805490839055925183927ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe91a360025460405163a9059cbb60e01b8152336004820152602481018390525f916001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610633573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065791906107f0565b905080610677576040516312171d8360e31b815260040160405180910390fd5b50505061068360015f55565b565b5f6007545f03610696575060045490565b6007546064600354426106a99190610794565b6106b391906107a7565b6106c590670de0b6b3a76400006107a7565b6106cf91906107be565b6004546106dc91906107dd565b905090565b60025f54036107365760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b60025f55565b5f6020828403121561074c575f80fd5b81356001600160a01b0381168114610762575f80fd5b9392505050565b5f60208284031215610779575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561029857610298610780565b808202811582820484141761029857610298610780565b5f826107d857634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561029857610298610780565b5f60208284031215610800575f80fd5b81518015158114610762575f80fdfea26469706673582212205beff84cecf97a9b8b63f6f0edcb1bc1375ac9badd612c2c4967a341698ee5d364736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x901 CODESIZE SUB DUP1 PUSH2 0x901 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0x7E JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP3 SWAP1 SWAP4 AND SWAP2 AND OR SWAP1 SSTORE PUSH2 0xAF JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x79 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x98 DUP4 PUSH2 0x63 JUMP JUMPDEST SWAP2 POP PUSH2 0xA6 PUSH1 0x20 DUP5 ADD PUSH2 0x63 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x845 DUP1 PUSH2 0xBC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xBEA08151 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xF43630BD EQ PUSH2 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x211F6CE1 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x121 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x105 JUMP JUMPDEST PUSH2 0xFB PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0xFB PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x121 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x685 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x258 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x6E1 JUMP JUMPDEST CALLER PUSH2 0x2AF PUSH2 0x685 JUMP JUMPDEST PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x2BF DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP2 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x321 SWAP1 DUP5 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 SWAP1 CALLER SWAP1 PUSH32 0xFAF925A2782590ECE15B73BCCE340AE5A670CAABCD87AE54E330C05AB6B92CF4 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x3EF PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x3FB PUSH2 0x685 JUMP JUMPDEST PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x40B DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0x43D PUSH2 0x6E1 JUMP JUMPDEST DUP2 DUP1 PUSH0 SUB PUSH2 0x45E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF45911F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x492 SWAP1 DUP5 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 SWAP1 CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x511 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x560 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56C PUSH2 0x6E1 JUMP JUMPDEST CALLER PUSH2 0x575 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x585 DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 DUP3 MSTORE DUP5 DUP5 KECCAK256 SSTORE CALLER DUP1 DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP3 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP3 MLOAD DUP4 SWAP3 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP2 LOG3 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x683 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH0 SUB PUSH2 0x696 JUMPI POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x6C5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x779 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x780 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x780 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x780 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xEF 0xF8 0x4C 0xEC 0xF9 PUSH27 0x9B8B63F6F0EDCB1BC1375AC9BADD612C2C4967A341698EE5D36473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "288:3308:6:-:0;;;997:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;;;1092:37:6;;-1:-1:-1;;;;;1092:37:6;;;-1:-1:-1;;;;;;1092:37:6;;;;;;;1139:14;:37;;;;;;;;;;;288:3308;;14:177:7;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;:::-;288:3308:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@REWARD_RATE_869": {
									"entryPoint": null,
									"id": 869,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantAfter_189": {
									"entryPoint": null,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_181": {
									"entryPoint": 1761,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimReward_1123": {
									"entryPoint": 1380,
									"id": 1123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@earned_982": {
									"entryPoint": 547,
									"id": 982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStaked_1179": {
									"entryPoint": null,
									"id": 1179,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardPerToken_954": {
									"entryPoint": 1669,
									"id": 954,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@s_balaces_887": {
									"entryPoint": null,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_lastUpdateTime_871": {
									"entryPoint": null,
									"id": 871,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewarPerTokenStored_873": {
									"entryPoint": null,
									"id": 873,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewardsToken_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_rewards_881": {
									"entryPoint": null,
									"id": 881,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_stakingToken_863": {
									"entryPoint": null,
									"id": 863,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@s_userRewardPerTokenPaid_877": {
									"entryPoint": null,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_1032": {
									"entryPoint": 1010,
									"id": 1032,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1077": {
									"entryPoint": 670,
									"id": 1077,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$794__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1920,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2671:7",
										"nodeType": "YulBlock",
										"src": "0:2671:7",
										"statements": [
											{
												"nativeSrc": "6:3:7",
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:239:7",
													"nodeType": "YulBlock",
													"src": "84:239:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:7",
																"nodeType": "YulBlock",
																"src": "130:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:7",
																					"nodeType": "YulLiteral",
																					"src": "139:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:7",
																					"nodeType": "YulLiteral",
																					"src": "142:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:7"
																			},
																			"nativeSrc": "132:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:7"
																		},
																		"nativeSrc": "132:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:7"
																		},
																		"nativeSrc": "101:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:7",
																		"nodeType": "YulLiteral",
																		"src": "126:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:7"
																},
																"nativeSrc": "97:32:7",
																"nodeType": "YulFunctionCall",
																"src": "97:32:7"
															},
															"nativeSrc": "94:52:7",
															"nodeType": "YulIf",
															"src": "94:52:7"
														},
														{
															"nativeSrc": "155:36:7",
															"nodeType": "YulVariableDeclaration",
															"src": "155:36:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "181:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "181:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "168:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "168:12:7"
																},
																"nativeSrc": "168:23:7",
																"nodeType": "YulFunctionCall",
																"src": "168:23:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:7",
																	"nodeType": "YulTypedName",
																	"src": "159:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "277:16:7",
																"nodeType": "YulBlock",
																"src": "277:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "286:1:7",
																					"nodeType": "YulLiteral",
																					"src": "286:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "289:1:7",
																					"nodeType": "YulLiteral",
																					"src": "289:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "279:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "279:6:7"
																			},
																			"nativeSrc": "279:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "279:12:7"
																		},
																		"nativeSrc": "279:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "279:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "213:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "213:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "224:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "224:5:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "231:42:7",
																						"nodeType": "YulLiteral",
																						"src": "231:42:7",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "220:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "220:3:7"
																				},
																				"nativeSrc": "220:54:7",
																				"nodeType": "YulFunctionCall",
																				"src": "220:54:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "210:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "210:2:7"
																		},
																		"nativeSrc": "210:65:7",
																		"nodeType": "YulFunctionCall",
																		"src": "210:65:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "203:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "203:6:7"
																},
																"nativeSrc": "203:73:7",
																"nodeType": "YulFunctionCall",
																"src": "203:73:7"
															},
															"nativeSrc": "200:93:7",
															"nodeType": "YulIf",
															"src": "200:93:7"
														},
														{
															"nativeSrc": "302:15:7",
															"nodeType": "YulAssignment",
															"src": "302:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "312:5:7",
																"nodeType": "YulIdentifier",
																"src": "312:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "302:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "14:309:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:7",
														"nodeType": "YulTypedName",
														"src": "50:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:7",
														"nodeType": "YulTypedName",
														"src": "61:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:7",
														"nodeType": "YulTypedName",
														"src": "73:6:7",
														"type": ""
													}
												],
												"src": "14:309:7"
											},
											{
												"body": {
													"nativeSrc": "429:76:7",
													"nodeType": "YulBlock",
													"src": "429:76:7",
													"statements": [
														{
															"nativeSrc": "439:26:7",
															"nodeType": "YulAssignment",
															"src": "439:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "451:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "451:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "462:2:7",
																		"nodeType": "YulLiteral",
																		"src": "462:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "447:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "447:3:7"
																},
																"nativeSrc": "447:18:7",
																"nodeType": "YulFunctionCall",
																"src": "447:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "439:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "439:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "481:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "481:9:7"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "492:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "492:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "474:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "474:6:7"
																},
																"nativeSrc": "474:25:7",
																"nodeType": "YulFunctionCall",
																"src": "474:25:7"
															},
															"nativeSrc": "474:25:7",
															"nodeType": "YulExpressionStatement",
															"src": "474:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "328:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "398:9:7",
														"nodeType": "YulTypedName",
														"src": "398:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "409:6:7",
														"nodeType": "YulTypedName",
														"src": "409:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "420:4:7",
														"nodeType": "YulTypedName",
														"src": "420:4:7",
														"type": ""
													}
												],
												"src": "328:177:7"
											},
											{
												"body": {
													"nativeSrc": "625:125:7",
													"nodeType": "YulBlock",
													"src": "625:125:7",
													"statements": [
														{
															"nativeSrc": "635:26:7",
															"nodeType": "YulAssignment",
															"src": "635:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "658:2:7",
																		"nodeType": "YulLiteral",
																		"src": "658:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "643:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "643:3:7"
																},
																"nativeSrc": "643:18:7",
																"nodeType": "YulFunctionCall",
																"src": "643:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "635:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "635:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "677:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "677:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "692:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "692:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "700:42:7",
																				"nodeType": "YulLiteral",
																				"src": "700:42:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "688:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "688:3:7"
																		},
																		"nativeSrc": "688:55:7",
																		"nodeType": "YulFunctionCall",
																		"src": "688:55:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "670:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "670:6:7"
																},
																"nativeSrc": "670:74:7",
																"nodeType": "YulFunctionCall",
																"src": "670:74:7"
															},
															"nativeSrc": "670:74:7",
															"nodeType": "YulExpressionStatement",
															"src": "670:74:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$794__to_t_address__fromStack_reversed",
												"nativeSrc": "510:240:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "594:9:7",
														"nodeType": "YulTypedName",
														"src": "594:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "605:6:7",
														"nodeType": "YulTypedName",
														"src": "605:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "616:4:7",
														"nodeType": "YulTypedName",
														"src": "616:4:7",
														"type": ""
													}
												],
												"src": "510:240:7"
											},
											{
												"body": {
													"nativeSrc": "825:110:7",
													"nodeType": "YulBlock",
													"src": "825:110:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "871:16:7",
																"nodeType": "YulBlock",
																"src": "871:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "880:1:7",
																					"nodeType": "YulLiteral",
																					"src": "880:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "883:1:7",
																					"nodeType": "YulLiteral",
																					"src": "883:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "873:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "873:6:7"
																			},
																			"nativeSrc": "873:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "873:12:7"
																		},
																		"nativeSrc": "873:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "873:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "846:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "846:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "855:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "855:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "842:3:7"
																		},
																		"nativeSrc": "842:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "842:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "867:2:7",
																		"nodeType": "YulLiteral",
																		"src": "867:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "838:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "838:3:7"
																},
																"nativeSrc": "838:32:7",
																"nodeType": "YulFunctionCall",
																"src": "838:32:7"
															},
															"nativeSrc": "835:52:7",
															"nodeType": "YulIf",
															"src": "835:52:7"
														},
														{
															"nativeSrc": "896:33:7",
															"nodeType": "YulAssignment",
															"src": "896:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "919:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "919:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "906:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "906:12:7"
																},
																"nativeSrc": "906:23:7",
																"nodeType": "YulFunctionCall",
																"src": "906:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "896:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "755:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "791:9:7",
														"nodeType": "YulTypedName",
														"src": "791:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "802:7:7",
														"nodeType": "YulTypedName",
														"src": "802:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "814:6:7",
														"nodeType": "YulTypedName",
														"src": "814:6:7",
														"type": ""
													}
												],
												"src": "755:180:7"
											},
											{
												"body": {
													"nativeSrc": "972:95:7",
													"nodeType": "YulBlock",
													"src": "972:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "989:1:7",
																		"nodeType": "YulLiteral",
																		"src": "989:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "996:3:7",
																				"nodeType": "YulLiteral",
																				"src": "996:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1001:10:7",
																				"nodeType": "YulLiteral",
																				"src": "1001:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "992:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "992:3:7"
																		},
																		"nativeSrc": "992:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "992:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "982:6:7"
																},
																"nativeSrc": "982:31:7",
																"nodeType": "YulFunctionCall",
																"src": "982:31:7"
															},
															"nativeSrc": "982:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "982:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1029:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1029:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1032:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1032:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1022:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1022:6:7"
																},
																"nativeSrc": "1022:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1022:15:7"
															},
															"nativeSrc": "1022:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1022:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1053:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1053:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1056:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1056:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1046:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1046:6:7"
																},
																"nativeSrc": "1046:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1046:15:7"
															},
															"nativeSrc": "1046:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1046:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "940:127:7",
												"nodeType": "YulFunctionDefinition",
												"src": "940:127:7"
											},
											{
												"body": {
													"nativeSrc": "1121:79:7",
													"nodeType": "YulBlock",
													"src": "1121:79:7",
													"statements": [
														{
															"nativeSrc": "1131:17:7",
															"nodeType": "YulAssignment",
															"src": "1131:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1143:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1143:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1146:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1146:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "1139:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1139:3:7"
																},
																"nativeSrc": "1139:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1139:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "1131:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1131:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1172:22:7",
																"nodeType": "YulBlock",
																"src": "1172:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1174:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1174:16:7"
																			},
																			"nativeSrc": "1174:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1174:18:7"
																		},
																		"nativeSrc": "1174:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1174:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "1163:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1163:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "1169:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1169:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1160:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:2:7"
																},
																"nativeSrc": "1160:11:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:11:7"
															},
															"nativeSrc": "1157:37:7",
															"nodeType": "YulIf",
															"src": "1157:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "1072:128:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1103:1:7",
														"nodeType": "YulTypedName",
														"src": "1103:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1106:1:7",
														"nodeType": "YulTypedName",
														"src": "1106:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "1112:4:7",
														"nodeType": "YulTypedName",
														"src": "1112:4:7",
														"type": ""
													}
												],
												"src": "1072:128:7"
											},
											{
												"body": {
													"nativeSrc": "1257:116:7",
													"nodeType": "YulBlock",
													"src": "1257:116:7",
													"statements": [
														{
															"nativeSrc": "1267:20:7",
															"nodeType": "YulAssignment",
															"src": "1267:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1282:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1282:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1285:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1285:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1278:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1278:3:7"
																},
																"nativeSrc": "1278:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1278:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "1267:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1267:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1345:22:7",
																"nodeType": "YulBlock",
																"src": "1345:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1347:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1347:16:7"
																			},
																			"nativeSrc": "1347:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:18:7"
																		},
																		"nativeSrc": "1347:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "1316:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "1316:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1309:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "1309:6:7"
																				},
																				"nativeSrc": "1309:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1309:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "1323:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "1323:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "1330:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "1330:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "1339:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "1339:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "1326:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "1326:3:7"
																						},
																						"nativeSrc": "1326:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "1326:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "1320:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "1320:2:7"
																				},
																				"nativeSrc": "1320:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "1306:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1306:2:7"
																		},
																		"nativeSrc": "1306:37:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1306:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1299:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:7"
																},
																"nativeSrc": "1299:45:7",
																"nodeType": "YulFunctionCall",
																"src": "1299:45:7"
															},
															"nativeSrc": "1296:71:7",
															"nodeType": "YulIf",
															"src": "1296:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "1205:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1236:1:7",
														"nodeType": "YulTypedName",
														"src": "1236:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1239:1:7",
														"nodeType": "YulTypedName",
														"src": "1239:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "1245:7:7",
														"nodeType": "YulTypedName",
														"src": "1245:7:7",
														"type": ""
													}
												],
												"src": "1205:168:7"
											},
											{
												"body": {
													"nativeSrc": "1424:171:7",
													"nodeType": "YulBlock",
													"src": "1424:171:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1455:111:7",
																"nodeType": "YulBlock",
																"src": "1455:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1476:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1476:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1483:3:7",
																							"nodeType": "YulLiteral",
																							"src": "1483:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1488:10:7",
																							"nodeType": "YulLiteral",
																							"src": "1488:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1479:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "1479:3:7"
																					},
																					"nativeSrc": "1479:20:7",
																					"nodeType": "YulFunctionCall",
																					"src": "1479:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1469:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1469:6:7"
																			},
																			"nativeSrc": "1469:31:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1469:31:7"
																		},
																		"nativeSrc": "1469:31:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1469:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1520:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1520:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1523:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1523:4:7",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1513:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1513:6:7"
																			},
																			"nativeSrc": "1513:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1513:15:7"
																		},
																		"nativeSrc": "1513:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1513:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1548:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1548:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1551:4:7",
																					"nodeType": "YulLiteral",
																					"src": "1551:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1541:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1541:6:7"
																			},
																			"nativeSrc": "1541:15:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1541:15:7"
																		},
																		"nativeSrc": "1541:15:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1541:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "1444:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1444:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1437:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:7"
																},
																"nativeSrc": "1437:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1437:9:7"
															},
															"nativeSrc": "1434:132:7",
															"nodeType": "YulIf",
															"src": "1434:132:7"
														},
														{
															"nativeSrc": "1575:14:7",
															"nodeType": "YulAssignment",
															"src": "1575:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1584:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1584:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1587:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1587:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1580:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1580:3:7"
																},
																"nativeSrc": "1580:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1580:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "1575:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "1575:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "1378:217:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1409:1:7",
														"nodeType": "YulTypedName",
														"src": "1409:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1412:1:7",
														"nodeType": "YulTypedName",
														"src": "1412:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "1418:1:7",
														"nodeType": "YulTypedName",
														"src": "1418:1:7",
														"type": ""
													}
												],
												"src": "1378:217:7"
											},
											{
												"body": {
													"nativeSrc": "1648:77:7",
													"nodeType": "YulBlock",
													"src": "1648:77:7",
													"statements": [
														{
															"nativeSrc": "1658:16:7",
															"nodeType": "YulAssignment",
															"src": "1658:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1669:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1669:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "1672:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1672:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1665:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1665:3:7"
																},
																"nativeSrc": "1665:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1665:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "1658:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1658:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:22:7",
																"nodeType": "YulBlock",
																"src": "1697:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "1699:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "1699:16:7"
																			},
																			"nativeSrc": "1699:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1699:18:7"
																		},
																		"nativeSrc": "1699:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1699:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "1689:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "1689:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "1692:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1692:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1686:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "1686:2:7"
																},
																"nativeSrc": "1686:10:7",
																"nodeType": "YulFunctionCall",
																"src": "1686:10:7"
															},
															"nativeSrc": "1683:36:7",
															"nodeType": "YulIf",
															"src": "1683:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "1600:125:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "1631:1:7",
														"nodeType": "YulTypedName",
														"src": "1631:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "1634:1:7",
														"nodeType": "YulTypedName",
														"src": "1634:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "1640:3:7",
														"nodeType": "YulTypedName",
														"src": "1640:3:7",
														"type": ""
													}
												],
												"src": "1600:125:7"
											},
											{
												"body": {
													"nativeSrc": "1859:168:7",
													"nodeType": "YulBlock",
													"src": "1859:168:7",
													"statements": [
														{
															"nativeSrc": "1869:26:7",
															"nodeType": "YulAssignment",
															"src": "1869:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1881:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1892:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1892:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1877:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1877:3:7"
																},
																"nativeSrc": "1877:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1877:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1869:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1869:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1911:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1911:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1926:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1926:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1934:42:7",
																				"nodeType": "YulLiteral",
																				"src": "1934:42:7",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1922:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1922:3:7"
																		},
																		"nativeSrc": "1922:55:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1922:55:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1904:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:7"
																},
																"nativeSrc": "1904:74:7",
																"nodeType": "YulFunctionCall",
																"src": "1904:74:7"
															},
															"nativeSrc": "1904:74:7",
															"nodeType": "YulExpressionStatement",
															"src": "1904:74:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1998:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1998:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2009:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2009:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1994:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1994:3:7"
																		},
																		"nativeSrc": "1994:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1994:18:7"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2014:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2014:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1987:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1987:6:7"
																},
																"nativeSrc": "1987:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1987:34:7"
															},
															"nativeSrc": "1987:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1987:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1730:297:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1820:9:7",
														"nodeType": "YulTypedName",
														"src": "1820:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1831:6:7",
														"nodeType": "YulTypedName",
														"src": "1831:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1839:6:7",
														"nodeType": "YulTypedName",
														"src": "1839:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1850:4:7",
														"nodeType": "YulTypedName",
														"src": "1850:4:7",
														"type": ""
													}
												],
												"src": "1730:297:7"
											},
											{
												"body": {
													"nativeSrc": "2110:199:7",
													"nodeType": "YulBlock",
													"src": "2110:199:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2156:16:7",
																"nodeType": "YulBlock",
																"src": "2156:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2165:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2165:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2168:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2168:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2158:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:7"
																			},
																			"nativeSrc": "2158:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2158:12:7"
																		},
																		"nativeSrc": "2158:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2158:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2131:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2131:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2140:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2127:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:7"
																		},
																		"nativeSrc": "2127:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2152:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2123:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2123:3:7"
																},
																"nativeSrc": "2123:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2123:32:7"
															},
															"nativeSrc": "2120:52:7",
															"nodeType": "YulIf",
															"src": "2120:52:7"
														},
														{
															"nativeSrc": "2181:29:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2181:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2200:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2200:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2194:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2194:5:7"
																},
																"nativeSrc": "2194:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2194:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2185:5:7",
																	"nodeType": "YulTypedName",
																	"src": "2185:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2263:16:7",
																"nodeType": "YulBlock",
																"src": "2263:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2272:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2272:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2275:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2275:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2265:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2265:6:7"
																			},
																			"nativeSrc": "2265:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2265:12:7"
																		},
																		"nativeSrc": "2265:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2265:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2232:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2232:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "2253:5:7",
																								"nodeType": "YulIdentifier",
																								"src": "2253:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "2246:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "2246:6:7"
																						},
																						"nativeSrc": "2246:13:7",
																						"nodeType": "YulFunctionCall",
																						"src": "2246:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2239:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2239:6:7"
																				},
																				"nativeSrc": "2239:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2239:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2229:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2229:2:7"
																		},
																		"nativeSrc": "2229:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2229:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2222:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2222:6:7"
																},
																"nativeSrc": "2222:40:7",
																"nodeType": "YulFunctionCall",
																"src": "2222:40:7"
															},
															"nativeSrc": "2219:60:7",
															"nodeType": "YulIf",
															"src": "2219:60:7"
														},
														{
															"nativeSrc": "2288:15:7",
															"nodeType": "YulAssignment",
															"src": "2288:15:7",
															"value": {
																"name": "value",
																"nativeSrc": "2298:5:7",
																"nodeType": "YulIdentifier",
																"src": "2298:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2288:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2032:277:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2076:9:7",
														"nodeType": "YulTypedName",
														"src": "2076:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2087:7:7",
														"nodeType": "YulTypedName",
														"src": "2087:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2099:6:7",
														"nodeType": "YulTypedName",
														"src": "2099:6:7",
														"type": ""
													}
												],
												"src": "2032:277:7"
											},
											{
												"body": {
													"nativeSrc": "2488:181:7",
													"nodeType": "YulBlock",
													"src": "2488:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2505:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2505:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2516:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2516:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2498:6:7"
																},
																"nativeSrc": "2498:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2498:21:7"
															},
															"nativeSrc": "2498:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "2498:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2539:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2539:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2550:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2550:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2535:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:7"
																		},
																		"nativeSrc": "2535:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:18:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2528:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:7"
																},
																"nativeSrc": "2528:30:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:30:7"
															},
															"nativeSrc": "2528:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "2528:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2578:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2578:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2589:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2589:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2574:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2574:3:7"
																		},
																		"nativeSrc": "2574:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2574:18:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "2594:33:7",
																		"nodeType": "YulLiteral",
																		"src": "2594:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2567:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:7"
																},
																"nativeSrc": "2567:61:7",
																"nodeType": "YulFunctionCall",
																"src": "2567:61:7"
															},
															"nativeSrc": "2567:61:7",
															"nodeType": "YulExpressionStatement",
															"src": "2567:61:7"
														},
														{
															"nativeSrc": "2637:26:7",
															"nodeType": "YulAssignment",
															"src": "2637:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2649:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2649:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2660:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2660:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2645:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2645:3:7"
																},
																"nativeSrc": "2645:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2645:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2637:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2314:355:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2465:9:7",
														"nodeType": "YulTypedName",
														"src": "2465:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2479:4:7",
														"nodeType": "YulTypedName",
														"src": "2479:4:7",
														"type": ""
													}
												],
												"src": "2314:355:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$794__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e4575f3560e01c8063a694fc3a11610088578063bea0815111610063578063bea08151146101be578063cd3daf9d146101dd578063f245ace4146101e5578063f43630bd14610204575f80fd5b8063a694fc3a14610190578063adca9b72146101a3578063b88a802f146101b6575f80fd5b80632e1a7d4d116100c35780632e1a7d4d14610142578063399080ec146101575780635997bb371461017f5780636aa0838f14610187575f80fd5b80628cc262146100e85780630bd21c561461010e578063211f6ce114610139575b5f80fd5b6100fb6100f636600461073c565b610223565b6040519081526020015b60405180910390f35b600254610121906001600160a01b031681565b6040516001600160a01b039091168152602001610105565b6100fb60045481565b610155610150366004610769565b61029e565b005b6100fb61016536600461073c565b6001600160a01b03165f9081526008602052604090205490565b6100fb606481565b6100fb60035481565b61015561019e366004610769565b6103f2565b600154610121906001600160a01b031681565b610155610564565b6100fb6101cc36600461073c565b60066020525f908152604090205481565b6100fb610685565b6100fb6101f336600461073c565b60056020525f908152604090205481565b6100fb61021236600461073c565b60086020525f908152604090205481565b6001600160a01b0381165f908152600660209081526040808320546005909252822054670de0b6b3a764000090610258610685565b6102629190610794565b6001600160a01b0385165f9081526008602052604090205461028491906107a7565b61028e91906107be565b61029891906107dd565b92915050565b6102a66106e1565b336102af610685565b600455426003556102bf81610223565b6001600160a01b0382165f90815260066020908152604080832093909355600454600590915291812091909155600780548492906102fe908490610794565b9091555050335f9081526008602052604081208054849290610321908490610794565b9091555050604051829033907ffaf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf4905f90a360015460405163a9059cbb60e01b8152336004820152602481018490525f916001600160a01b03169063a9059cbb906044016020604051808303815f875af11580156103a0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103c491906107f0565b9050806103e4576040516312171d8360e31b815260040160405180910390fd5b50506103ef60015f55565b50565b336103fb610685565b6004554260035561040b81610223565b6001600160a01b0382165f9081526006602090815260408083209390935560045460059091529190205561043d6106e1565b81805f0361045e57604051630f45911f60e41b815260040160405180910390fd5b8260075f82825461046f91906107dd565b9091555050335f90815260086020526040812080548592906104929084906107dd565b9091555050604051839033907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d905f90a360015460405163a9059cbb60e01b8152306004820152602481018590525f916001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610511573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061053591906107f0565b905080610555576040516312171d8360e31b815260040160405180910390fd5b505061056060015f55565b5050565b61056c6106e1565b33610575610685565b6004554260035561058581610223565b6001600160a01b0382165f90815260066020818152604080842094909455600454600582528484205533808452919052828220805490839055925183927ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe91a360025460405163a9059cbb60e01b8152336004820152602481018390525f916001600160a01b03169063a9059cbb906044016020604051808303815f875af1158015610633573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065791906107f0565b905080610677576040516312171d8360e31b815260040160405180910390fd5b50505061068360015f55565b565b5f6007545f03610696575060045490565b6007546064600354426106a99190610794565b6106b391906107a7565b6106c590670de0b6b3a76400006107a7565b6106cf91906107be565b6004546106dc91906107dd565b905090565b60025f54036107365760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640160405180910390fd5b60025f55565b5f6020828403121561074c575f80fd5b81356001600160a01b0381168114610762575f80fd5b9392505050565b5f60208284031215610779575f80fd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561029857610298610780565b808202811582820484141761029857610298610780565b5f826107d857634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561029857610298610780565b5f60208284031215610800575f80fd5b81518015158114610762575f80fdfea26469706673582212205beff84cecf97a9b8b63f6f0edcb1bc1375ac9badd612c2c4967a341698ee5d364736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE4 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA694FC3A GT PUSH2 0x88 JUMPI DUP1 PUSH4 0xBEA08151 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xBEA08151 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xCD3DAF9D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xF245ACE4 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xF43630BD EQ PUSH2 0x204 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0xADCA9B72 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0xB88A802F EQ PUSH2 0x1B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2E1A7D4D GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x142 JUMPI DUP1 PUSH4 0x399080EC EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x5997BB37 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x6AA0838F EQ PUSH2 0x187 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xBD21C56 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x211F6CE1 EQ PUSH2 0x139 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xFB PUSH2 0xF6 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x121 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x105 JUMP JUMPDEST PUSH2 0xFB PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x150 CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x29E JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFB PUSH2 0x165 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xFB PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0xFB PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x19E CALLDATASIZE PUSH1 0x4 PUSH2 0x769 JUMP JUMPDEST PUSH2 0x3F2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x121 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x564 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x685 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x1F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xFB PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 SLOAD PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x258 PUSH2 0x685 JUMP JUMPDEST PUSH2 0x262 SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x284 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A6 PUSH2 0x6E1 JUMP JUMPDEST CALLER PUSH2 0x2AF PUSH2 0x685 JUMP JUMPDEST PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x2BF DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP2 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x7 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x2FE SWAP1 DUP5 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x321 SWAP1 DUP5 SWAP1 PUSH2 0x794 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 SWAP1 CALLER SWAP1 PUSH32 0xFAF925A2782590ECE15B73BCCE340AE5A670CAABCD87AE54E330C05AB6B92CF4 SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x3E4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x3EF PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH2 0x3FB PUSH2 0x685 JUMP JUMPDEST PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x40B DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE PUSH2 0x43D PUSH2 0x6E1 JUMP JUMPDEST DUP2 DUP1 PUSH0 SUB PUSH2 0x45E JUMPI PUSH1 0x40 MLOAD PUSH4 0xF45911F PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x46F SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x492 SWAP1 DUP5 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP4 SWAP1 CALLER SWAP1 PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH0 SWAP1 LOG3 PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x511 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x535 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH2 0x560 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56C PUSH2 0x6E1 JUMP JUMPDEST CALLER PUSH2 0x575 PUSH2 0x685 JUMP JUMPDEST PUSH1 0x4 SSTORE TIMESTAMP PUSH1 0x3 SSTORE PUSH2 0x585 DUP2 PUSH2 0x223 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x4 SLOAD PUSH1 0x5 DUP3 MSTORE DUP5 DUP5 KECCAK256 SSTORE CALLER DUP1 DUP5 MSTORE SWAP2 SWAP1 MSTORE DUP3 DUP3 KECCAK256 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE SWAP3 MLOAD DUP4 SWAP3 PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE SWAP2 LOG3 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x633 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x7F0 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH4 0x12171D83 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP PUSH2 0x683 PUSH1 0x1 PUSH0 SSTORE JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD PUSH0 SUB PUSH2 0x696 JUMPI POP PUSH1 0x4 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x64 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x6A9 SWAP2 SWAP1 PUSH2 0x794 JUMP JUMPDEST PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x6C5 SWAP1 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7A7 JUMP JUMPDEST PUSH2 0x6CF SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x6DC SWAP2 SWAP1 PUSH2 0x7DD JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SSTORE JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x74C JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x779 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x780 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x780 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x7D8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x298 JUMPI PUSH2 0x298 PUSH2 0x780 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x800 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x762 JUMPI PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPDEST 0xEF 0xF8 0x4C 0xEC 0xF9 PUSH27 0x9B8B63F6F0EDCB1BC1375AC9BADD612C2C4967A341698EE5D36473 PUSH16 0x6C634300081500330000000000000000 ",
							"sourceMap": "288:3308:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1694:307;;;;;;:::i;:::-;;:::i;:::-;;;474:25:7;;;462:2;447:18;1694:307:6;;;;;;;;384:28;;;;;-1:-1:-1;;;;;384:28:6;;;;;;-1:-1:-1;;;;;688:55:7;;;670:74;;658:2;643:18;384:28:6;510:240:7;542:36:6;;;;;;2372:346;;;;;;:::i;:::-;;:::i;:::-;;3486:108;;;;;;:::i;:::-;-1:-1:-1;;;;;3569:18:6;3543:7;3569:18;;;:9;:18;;;;;;;3486:108;460:39;;496:3;460:39;;505:31;;;;;;2008:358;;;;;;:::i;:::-;;:::i;330:28::-;;;;;-1:-1:-1;;;;;330:28:6;;;2724:348;;;:::i;651:44::-;;;;;;:::i;:::-;;;;;;;;;;;;;;1273:415;;;:::i;586:59::-;;;;;;:::i;:::-;;;;;;;;;;;;;;738:44;;;;;;:::i;:::-;;;;;;;;;;;;;;1694:307;-1:-1:-1;;;;;1858:18:6;;1747:7;1858:18;;;:9;:18;;;;;;;;;1814:24;:33;;;;;;1850:4;;1795:16;:14;:16::i;:::-;:52;;;;:::i;:::-;-1:-1:-1;;;;;1775:18:6;;;;;;:9;:18;;;;;;:73;;;;:::i;:::-;1774:80;;;;:::i;:::-;1773:103;;;;:::i;:::-;1766:110;1694:307;-1:-1:-1;;1694:307:6:o;2372:346::-;2261:21:1;:19;:21::i;:::-;2441:10:6::1;3151:16;:14;:16::i;:::-;3127:21;:40:::0;3196:15:::1;3177:16;:34:::0;3242:15:::1;3249:7:::0;3242:6:::1;:15::i;:::-;-1:-1:-1::0;;;;;3221:18:6;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;;:36;;;;3303:21:::1;::::0;3267:24:::1;:33:::0;;;;;;:57;;;;2463:13:::2;:21:::0;;2478:6;;3221:18;2463:21:::2;::::0;2478:6;;2463:21:::2;:::i;:::-;::::0;;;-1:-1:-1;;2504:10:6::2;2494:21;::::0;;;:9:::2;:21;::::0;;;;:31;;2519:6;;2494:21;:31:::2;::::0;2519:6;;2494:31:::2;:::i;:::-;::::0;;;-1:-1:-1;;2540:33:6::2;::::0;2566:6;;2554:10:::2;::::0;2540:33:::2;::::0;;;::::2;2598:14;::::0;:43:::2;::::0;-1:-1:-1;;;2598:43:6;;2622:10:::2;2598:43;::::0;::::2;1904:74:7::0;1994:18;;;1987:34;;;2583:12:6::2;::::0;-1:-1:-1;;;;;2598:14:6::2;::::0;:23:::2;::::0;1877:18:7;;2598:43:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2583:58;;2655:7;2651:61;;2685:16;;-1:-1:-1::0;;;2685:16:6::2;;;;;;;;;;;2651:61;2453:265;2292:1:1::1;2303:20:::0;1716:1;2809:7;:22;2629:209;2303:20;2372:346:6;:::o;2008:358::-;2061:10;3151:16;:14;:16::i;:::-;3127:21;:40;3196:15;3177:16;:34;3242:15;3249:7;3242:6;:15::i;:::-;-1:-1:-1;;;;;3221:18:6;;;;;;:9;:18;;;;;;;;:36;;;;3303:21;;3267:24;:33;;;;;;:57;2261:21:1::1;:19;:21::i;:::-;2099:6:6::2;3399;3409:1;3399:11:::0;3396:67:::2;;3433:19;;-1:-1:-1::0;;;3433:19:6::2;;;;;;;;;;;3396:67;2132:6:::3;2117:13;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;2158:10:6::3;2148:21;::::0;;;:9:::3;:21;::::0;;;;:29;;2171:6;;2148:21;:29:::3;::::0;2171:6;;2148:29:::3;:::i;:::-;::::0;;;-1:-1:-1;;2192:26:6::3;::::0;2211:6;;2199:10:::3;::::0;2192:26:::3;::::0;;;::::3;2243:14;::::0;:46:::3;::::0;-1:-1:-1;;;2243:46:6;;2275:4:::3;2243:46;::::0;::::3;1904:74:7::0;1994:18;;;1987:34;;;2228:12:6::3;::::0;-1:-1:-1;;;;;2243:14:6::3;::::0;:23:::3;::::0;1877:18:7;;2243:46:6::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2228:61;;2303:7;2299:61;;2333:16;;-1:-1:-1::0;;;2333:16:6::3;;;;;;;;;;;2299:61;2107:259;2292:1:1::2;2303:20:::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;2008:358:6::0;;:::o;2724:348::-;2261:21:1;:19;:21::i;:::-;2783:10:6::1;3151:16;:14;:16::i;:::-;3127:21;:40:::0;3196:15:::1;3177:16;:34:::0;3242:15:::1;3249:7:::0;3242:6:::1;:15::i;:::-;-1:-1:-1::0;;;;;3221:18:6;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;;:36;;;;3303:21:::1;::::0;3267:24:::1;:33:::0;;;;;:57;2832:10:::2;2822:21:::0;;;;;;;;;;;2853:25;;;;2893:34;;2822:21;;2893:34:::2;::::0;::::2;2952:14;::::0;:43:::2;::::0;-1:-1:-1;;;2952:43:6;;2976:10:::2;2952:43;::::0;::::2;1904:74:7::0;1994:18;;;1987:34;;;2937:12:6::2;::::0;-1:-1:-1;;;;;2952:14:6::2;::::0;:23:::2;::::0;1877:18:7;;2952:43:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2937:58;;3009:7;3005:61;;3039:16;;-1:-1:-1::0;;;3039:16:6::2;;;;;;;;;;;3005:61;2795:277;;2292:1:1::1;2303:20:::0;1716:1;2809:7;:22;2629:209;2303:20;2724:348:6:o;1273:415::-;1319:7;1341:13;;1358:1;1341:18;1338:76;;-1:-1:-1;1382:21:6;;;1273:415::o;1338:76::-;1508:13;;496:3;1472:16;;1456:15;:32;;;;:::i;:::-;1455:46;;;;:::i;:::-;:51;;1502:4;1455:51;:::i;:::-;1454:67;;;;:::i;:::-;1431:21;;:91;;;;:::i;:::-;1424:98;;1273:415;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:1;;2516:2:7;2460:63:1;;;2498:21:7;2555:2;2535:18;;;2528:30;2594:33;2574:18;;;2567:61;2645:18;;2460:63:1;;;;;;;;1759:1;2598:7;:18;2336:287::o;14:309:7:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;-1:-1:-1;;;;;224:5:7;220:54;213:5;210:65;200:93;;289:1;286;279:12;200:93;312:5;14:309;-1:-1:-1;;;14:309:7:o;755:180::-;814:6;867:2;855:9;846:7;842:23;838:32;835:52;;;883:1;880;873:12;835:52;-1:-1:-1;906:23:7;;755:180;-1:-1:-1;755:180:7:o;940:127::-;1001:10;996:3;992:20;989:1;982:31;1032:4;1029:1;1022:15;1056:4;1053:1;1046:15;1072:128;1139:9;;;1160:11;;;1157:37;;;1174:18;;:::i;1205:168::-;1278:9;;;1309;;1326:15;;;1320:22;;1306:37;1296:71;;1347:18;;:::i;1378:217::-;1418:1;1444;1434:132;;1488:10;1483:3;1479:20;1476:1;1469:31;1523:4;1520:1;1513:15;1551:4;1548:1;1541:15;1434:132;-1:-1:-1;1580:9:7;;1378:217::o;1600:125::-;1665:9;;;1686:10;;;1683:36;;;1699:18;;:::i;2032:277::-;2099:6;2152:2;2140:9;2131:7;2127:23;2123:32;2120:52;;;2168:1;2165;2158:12;2120:52;2200:9;2194:16;2253:5;2246:13;2239:21;2232:5;2229:32;2219:60;;2275:1;2272;2265:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"REWARD_RATE()": "250",
								"claimReward()": "infinite",
								"earned(address)": "infinite",
								"getStaked(address)": "2533",
								"rewardPerToken()": "infinite",
								"s_balaces(address)": "2558",
								"s_lastUpdateTime()": "2372",
								"s_rewarPerTokenStored()": "2351",
								"s_rewards(address)": "2492",
								"s_rewardsToken()": "2382",
								"s_stakingToken()": "2381",
								"s_userRewardPerTokenPaid(address)": "2536",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 997,
									"end": 1183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 997,
									"end": 1183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1092,
									"end": 1129,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1153,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1139,
									"end": 1176,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 7,
									"value": "16"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 288,
									"end": 3596,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205beff84cecf97a9b8b63f6f0edcb1bc1375ac9badd612c2c4967a341698ee5d364736f6c63430008150033",
									".code": [
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "A694FC3A"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "BEA08151"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "BEA08151"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "CD3DAF9D"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "F245ACE4"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "F43630BD"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "A694FC3A"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "ADCA9B72"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "B88A802F"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "2E1A7D4D"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "399080EC"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "5997BB37"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "6AA0838F"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "8CC262"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "BD21C56"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "211F6CE1"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 288,
											"end": 3596,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1694,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1694,
											"end": 2001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 474,
											"end": 499,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 474,
											"end": 499,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 474,
											"end": 499,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 462,
											"end": 464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 447,
											"end": 465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 384,
											"end": 412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 384,
											"end": 412,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 384,
											"end": 412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 384,
											"end": 412,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 412,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 688,
											"end": 743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 688,
											"end": 743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 688,
											"end": 743,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 670,
											"end": 744,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 670,
											"end": 744,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 658,
											"end": 660,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 643,
											"end": 661,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 384,
											"end": 412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 510,
											"end": 750,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 542,
											"end": 578,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 542,
											"end": 578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 542,
											"end": 578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 542,
											"end": 578,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 542,
											"end": 578,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 542,
											"end": 578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 542,
											"end": 578,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2372,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2372,
											"end": 2718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 3486,
											"end": 3594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3543,
											"end": 3550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3578,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3569,
											"end": 3587,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3486,
											"end": 3594,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 460,
											"end": 499,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 460,
											"end": 499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 460,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 460,
											"end": 499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 460,
											"end": 499,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 505,
											"end": 536,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 505,
											"end": 536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 505,
											"end": 536,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 505,
											"end": 536,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 505,
											"end": 536,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 505,
											"end": 536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 505,
											"end": 536,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2008,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2008,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 330,
											"end": 358,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 330,
											"end": 358,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 330,
											"end": 358,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 330,
											"end": 358,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 330,
											"end": 358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 330,
											"end": 358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 330,
											"end": 358,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 330,
											"end": 358,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 330,
											"end": 358,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2724,
											"end": 3072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 651,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 651,
											"end": 695,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1273,
											"end": 1688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 586,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 586,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 586,
											"end": 645,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 738,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 738,
											"end": 782,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 738,
											"end": 782,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1867,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1858,
											"end": 1876,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1838,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1814,
											"end": 1847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1847,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1847,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1847,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1847,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1814,
											"end": 1847,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1850,
											"end": 1854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1795,
											"end": 1809,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1795,
											"end": 1811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1795,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1795,
											"end": 1847,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1847,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1847,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1795,
											"end": 1847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1795,
											"end": 1847,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 1795,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1784,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1793,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1775,
											"end": 1848,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1848,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1775,
											"end": 1848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1775,
											"end": 1848,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1775,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1774,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1773,
											"end": 1876,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1876,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1773,
											"end": 1876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1773,
											"end": 1876,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1773,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1766,
											"end": 1876,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1694,
											"end": 2001,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1694,
											"end": 2001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2451,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3151,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3151,
											"end": 3167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3151,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3167,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3211,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3177,
											"end": 3211,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3242,
											"end": 3257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3221,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3303,
											"end": 3324,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3324,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3324,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3324,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2463,
											"end": 2484,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2463,
											"end": 2484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2463,
											"end": 2484,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 2463,
											"end": 2484,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2463,
											"end": 2484,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2504,
											"end": 2514,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2503,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2494,
											"end": 2515,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2515,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 2494,
											"end": 2525,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 2494,
											"end": 2525,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2494,
											"end": 2525,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2540,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2540,
											"end": 2573,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2564,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2564,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FAF925A2782590ECE15B73BCCE340AE5A670CAABCD87AE54E330C05AB6B92CF4"
										},
										{
											"begin": 2540,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2540,
											"end": 2573,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2612,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2641,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2622,
											"end": 2632,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2598,
											"end": 2641,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2583,
											"end": 2595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2583,
											"end": 2595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2612,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2598,
											"end": 2621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2641,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2598,
											"end": 2641,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 2598,
											"end": 2641,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2641,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2641,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2655,
											"end": 2662,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2712,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2651,
											"end": 2712,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2685,
											"end": 2701,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2651,
											"end": 2712,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2651,
											"end": 2712,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2453,
											"end": 2718,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2372,
											"end": 2718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2061,
											"end": 2071,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3151,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3151,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3151,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3148,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3167,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3211,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3193,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3177,
											"end": 3211,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3242,
											"end": 3257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3257,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3242,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3230,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3303,
											"end": 3324,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3291,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3324,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2105,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3399,
											"end": 3405,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3410,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3399,
											"end": 3410,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3463,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3396,
											"end": 3463,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F45911F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3452,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3463,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3396,
											"end": 3463,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2132,
											"end": 2138,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2130,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2117,
											"end": 2130,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2117,
											"end": 2138,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2117,
											"end": 2138,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2138,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2158,
											"end": 2168,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2169,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2157,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2148,
											"end": 2169,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2169,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2148,
											"end": 2177,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2148,
											"end": 2177,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2148,
											"end": 2177,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2192,
											"end": 2218,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2209,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2218,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2218,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2257,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2243,
											"end": 2257,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2275,
											"end": 2279,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2228,
											"end": 2240,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2228,
											"end": 2240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2243,
											"end": 2257,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2266,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2243,
											"end": 2266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2289,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2243,
											"end": 2289,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2243,
											"end": 2289,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2289,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2228,
											"end": 2289,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2310,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2360,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2299,
											"end": 2360,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2349,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2360,
											"modifierDepth": 3,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2299,
											"end": 2360,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2107,
											"end": 2366,
											"modifierDepth": 3,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2008,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2724,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2783,
											"end": 2793,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3151,
											"end": 3165,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3151,
											"end": 3167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3151,
											"end": 3167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3151,
											"end": 3167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3127,
											"end": 3148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3167,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3211,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3177,
											"end": 3193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3177,
											"end": 3211,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3249,
											"end": 3256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3248,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 3242,
											"end": 3257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3242,
											"end": 3257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3230,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3221,
											"end": 3239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3239,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3221,
											"end": 3257,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3303,
											"end": 3324,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3303,
											"end": 3324,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3291,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3300,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3267,
											"end": 3324,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2832,
											"end": 2842,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2878,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2853,
											"end": 2878,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2927,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2893,
											"end": 2927,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2893,
											"end": 2927,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2966,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2952,
											"end": 2966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 2995,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2952,
											"end": 2995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2986,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2952,
											"end": 2995,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1904,
											"end": 1978,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2012,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1987,
											"end": 2021,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2949,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2952,
											"end": 2966,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 2952,
											"end": 2975,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1877,
											"end": 1895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 2952,
											"end": 2995,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2952,
											"end": 2995,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2995,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2937,
											"end": 2995,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3016,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3066,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3005,
											"end": 3066,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12171D83"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3039,
											"end": 3055,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3005,
											"end": 3066,
											"modifierDepth": 2,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3005,
											"end": 3066,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 3072,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 3072,
											"modifierDepth": 2,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 3072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1319,
											"end": 1326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1358,
											"end": 1359,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1359,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1338,
											"end": 1414,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1382,
											"end": 1403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1414,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1338,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1508,
											"end": 1521,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1508,
											"end": 1521,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 496,
											"end": 499,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1472,
											"end": 1488,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1472,
											"end": 1488,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1471,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 1456,
											"end": 1488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1456,
											"end": 1488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1455,
											"end": 1501,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1501,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1455,
											"end": 1501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1501,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1455,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1455,
											"end": 1506,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1455,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1455,
											"end": 1506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1455,
											"end": 1506,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 1455,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1454,
											"end": 1521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 1454,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1454,
											"end": 1521,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 1454,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1452,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1431,
											"end": 1452,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1431,
											"end": 1522,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1431,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1431,
											"end": 1522,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1431,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2516,
											"end": 2518,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2498,
											"end": 2519,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2535,
											"end": 2553,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2558,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2594,
											"end": 2627,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2574,
											"end": 2592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2628,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 323,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 181,
											"end": 190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 168,
											"end": 191,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 224,
											"end": 229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 220,
											"end": 274,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 213,
											"end": 218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 210,
											"end": 275,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 200,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 289,
											"end": 290,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 286,
											"end": 287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 279,
											"end": 291,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 200,
											"end": 293,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 200,
											"end": 293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 312,
											"end": 317,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 14,
											"end": 323,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 755,
											"end": 935,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 755,
											"end": 935,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 814,
											"end": 820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 855,
											"end": 864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 846,
											"end": 853,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 842,
											"end": 865,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 838,
											"end": 870,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 835,
											"end": 887,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 835,
											"end": 887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 835,
											"end": 887,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 881,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 873,
											"end": 885,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 835,
											"end": 887,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 835,
											"end": 887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 906,
											"end": 929,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 906,
											"end": 929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 755,
											"end": 935,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 755,
											"end": 935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 940,
											"end": 1067,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 940,
											"end": 1067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1001,
											"end": 1011,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 996,
											"end": 999,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 992,
											"end": 1012,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 989,
											"end": 990,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 1013,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1032,
											"end": 1036,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1022,
											"end": 1037,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1053,
											"end": 1054,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1046,
											"end": 1061,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1072,
											"end": 1200,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 1072,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1171,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1171,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1194,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1157,
											"end": 1194,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1157,
											"end": 1194,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1174,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1174,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1205,
											"end": 1373,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 1205,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1278,
											"end": 1287,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1309,
											"end": 1318,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1341,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1326,
											"end": 1341,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1342,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1320,
											"end": 1342,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1306,
											"end": 1343,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1296,
											"end": 1367,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1347,
											"end": 1365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1347,
											"end": 1365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1595,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1378,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1444,
											"end": 1445,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1434,
											"end": 1566,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1488,
											"end": 1498,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 1483,
											"end": 1486,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1479,
											"end": 1499,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1477,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1523,
											"end": 1527,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1520,
											"end": 1521,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1551,
											"end": 1555,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1548,
											"end": 1549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1556,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1566,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 1434,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1589,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1378,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1600,
											"end": 1725,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 1600,
											"end": 1725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1665,
											"end": 1674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1696,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1696,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1686,
											"end": 1696,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1683,
											"end": 1719,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1683,
											"end": 1719,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1683,
											"end": 1719,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 1699,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1699,
											"end": 1717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2309,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 2032,
											"end": 2309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2127,
											"end": 2150,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2165,
											"end": 2166,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2158,
											"end": 2170,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 2120,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2194,
											"end": 2210,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2253,
											"end": 2258,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2246,
											"end": 2259,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2239,
											"end": 2260,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2229,
											"end": 2261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 2219,
											"end": 2279,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2275,
											"end": 2276,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2272,
											"end": 2273,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2277,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/Dapps/Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"REWARD_RATE()": "5997bb37",
							"claimReward()": "b88a802f",
							"earned(address)": "008cc262",
							"getStaked(address)": "399080ec",
							"rewardPerToken()": "cd3daf9d",
							"s_balaces(address)": "f43630bd",
							"s_lastUpdateTime()": "6aa0838f",
							"s_rewarPerTokenStored()": "211f6ce1",
							"s_rewards(address)": "bea08151",
							"s_rewardsToken()": "0bd21c56",
							"s_stakingToken()": "adca9b72",
							"s_userRewardPerTokenPaid(address)": "f245ace4",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardsToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NeedsMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrewStake\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"REWARD_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_balaces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewarPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Dapps/Staking.sol\":\"staking\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":250},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Dapps/Staking.sol\":{\"keccak256\":\"0x19a14f6fb02a7bf865f67fee48b9347d80c37f09002ebae397e701e747ceffe8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://52538b55774711d5ae7cfac7114df68b80503eb18391c19f3c6b82aaa47a4940\",\"dweb:/ipfs/QmeVoBZCxGXYii31B4xZBiYTkyTKUBVWKZrQkvkhow2rxB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 863,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_stakingToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)794"
							},
							{
								"astId": 866,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_rewardsToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)794"
							},
							{
								"astId": 871,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_lastUpdateTime",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 873,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_rewarPerTokenStored",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_userRewardPerTokenPaid",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 881,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_rewards",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 883,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 887,
								"contract": "contracts/Dapps/Staking.sol:staking",
								"label": "s_balaces",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)794": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 142,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 145,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 155,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 201,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 158,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 162,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 166,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 171,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 177,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 201,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 201,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 196,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 194,
												"id": 198,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 201,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 202,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							850
						],
						"ERC20": [
							716
						],
						"IERC20": [
							794
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							820
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 795,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 204,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 794,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 821,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 206,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 820,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 851,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 208,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 850,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 137,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 210,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 213,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 850,
										"src": "1428:7:2"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 215,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 794,
										"src": "1437:6:2"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 217,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 820,
										"src": "1445:14:2"
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 219,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:2"
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716,
								41,
								820,
								794,
								850
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 224,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 223,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 221,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 222,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 229,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 225,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 228,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 226,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 227,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 234,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 233,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 235,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 248,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 253,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 716,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										807
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 259,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 716,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										813
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 268,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 236,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 267,
												"id": 269,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 716,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 274,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 716,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										743
									],
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 286,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 232,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 287,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 716,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 297,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 299,
													"indexExpression": {
														"id": 298,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 300,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 716,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										761
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 312,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 311,
												"id": 324,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 716,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 336,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 338,
														"indexExpression": {
															"id": 337,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 340,
													"indexExpression": {
														"id": 339,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 335,
												"id": 341,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 716,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										781
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 366,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 353,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 355,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															667
														],
														"referencedDeclaration": 607,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 352,
												"id": 365,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 716,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										793
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 379,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 381,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 378,
												"id": 397,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 716,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 425,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 431,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 430,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 716,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 456,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 457,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 493,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																468
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 468,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 493,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 472,
															"initialValue": {
																"baseExpression": {
																	"id": 469,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 471,
																"indexExpression": {
																	"id": 470,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 474,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 477,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 478,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 479,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 453,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 476,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 481,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 492,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 484,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 486,
																			"indexExpression": {
																				"id": 485,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 487,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 488,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 491,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 494,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 462,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 463,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 495,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 496,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 514,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 513,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 507,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 509,
																			"indexExpression": {
																				"id": 508,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 510,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 512,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 515,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 505,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 501,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 504,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 517,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 716,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 531,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 532,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 538,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 537,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 543,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 716,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 577,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 571,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 570,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 576,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 716,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 599,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															667
														],
														"referencedDeclaration": 667,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 716,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 641,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 640,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 646,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 649,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 652,
															"indexExpression": {
																"id": 650,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 651,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 654,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 657,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 616,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 659,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 660,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 661,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 658,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 716,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"id": 680,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 679,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 686,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 685,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 691,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 701,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 700,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 695,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 696,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 697,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 694,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 699,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 711,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 703,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 670,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 704,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 705,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 706,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 702,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				607,
																				667
																			],
																			"referencedDeclaration": 667,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 710,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 716,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 717,
							"src": "1401:9741:2",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								728,
								737
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							794
						]
					},
					"id": 795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 794,
							"linearizedBaseContracts": [
								794
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 728,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 737,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 794,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 794,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 794,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 794,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 794,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 794,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 795,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								728,
								737
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							794
						],
						"IERC20Metadata": [
							820
						]
					},
					"id": 821,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 795,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 797,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 794,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 800,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 794,
										"src": "305:6:4"
									},
									"id": 801,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 799,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 820,
							"linearizedBaseContracts": [
								820,
								794
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 820,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 820,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 816,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 820,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 821,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								728,
								737
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							850
						]
					},
					"id": 851,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 823,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 850,
							"linearizedBaseContracts": [
								850
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 831,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 828,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 827,
												"id": 830,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 850,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 837,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 836,
												"id": 839,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 850,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 848,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 845,
												"id": 847,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 850,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 851,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"contracts/Dapps/Staking.sol": {
				"ast": {
					"absolutePath": "contracts/Dapps/Staking.sol",
					"exportedSymbols": {
						"Context": [
							850
						],
						"ERC20": [
							716
						],
						"IERC20": [
							794
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							820
						],
						"NeedsMoreThanZero": [
							858
						],
						"ReentrancyGuard": [
							201
						],
						"TransferFailed": [
							856
						],
						"staking": [
							1180
						]
					},
					"id": 1181,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 852,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "36:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 853,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1181,
							"sourceUnit": 717,
							"src": "61:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 854,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1181,
							"sourceUnit": 202,
							"src": "117:62:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"errorSelector": "90b8ec18",
							"id": 856,
							"name": "TransferFailed",
							"nameLocation": "243:14:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 855,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "257:2:6"
							},
							"src": "237:23:6"
						},
						{
							"errorSelector": "f45911f0",
							"id": 858,
							"name": "NeedsMoreThanZero",
							"nameLocation": "267:17:6",
							"nodeType": "ErrorDefinition",
							"parameters": {
								"id": 857,
								"nodeType": "ParameterList",
								"parameters": [],
								"src": "284:2:6"
							},
							"src": "261:26:6"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 859,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"308:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "308:15:6"
									},
									"id": 860,
									"nodeType": "InheritanceSpecifier",
									"src": "308:15:6"
								}
							],
							"canonicalName": "staking",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1180,
							"linearizedBaseContracts": [
								1180,
								201
							],
							"name": "staking",
							"nameLocation": "297:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "adca9b72",
									"id": 863,
									"mutability": "mutable",
									"name": "s_stakingToken",
									"nameLocation": "344:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "330:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$794",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 862,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 861,
											"name": "IERC20",
											"nameLocations": [
												"330:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 794,
											"src": "330:6:6"
										},
										"referencedDeclaration": 794,
										"src": "330:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$794",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0bd21c56",
									"id": 866,
									"mutability": "mutable",
									"name": "s_rewardsToken",
									"nameLocation": "398:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "384:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$794",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 865,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 864,
											"name": "IERC20",
											"nameLocations": [
												"384:6:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 794,
											"src": "384:6:6"
										},
										"referencedDeclaration": 794,
										"src": "384:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$794",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5997bb37",
									"id": 869,
									"mutability": "constant",
									"name": "REWARD_RATE",
									"nameLocation": "484:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "460:39:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 867,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "460:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 868,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "496:3:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6aa0838f",
									"id": 871,
									"mutability": "mutable",
									"name": "s_lastUpdateTime",
									"nameLocation": "520:16:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "505:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 870,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "505:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "211f6ce1",
									"id": 873,
									"mutability": "mutable",
									"name": "s_rewarPerTokenStored",
									"nameLocation": "557:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "542:36:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 872,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "542:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f245ace4",
									"id": 877,
									"mutability": "mutable",
									"name": "s_userRewardPerTokenPaid",
									"nameLocation": "621:24:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "586:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 876,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 874,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "594:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "586:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 875,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "605:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "bea08151",
									"id": 881,
									"mutability": "mutable",
									"name": "s_rewards",
									"nameLocation": "686:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "651:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 880,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 878,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "659:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "651:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "670:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 883,
									"mutability": "mutable",
									"name": "s_totalSupply",
									"nameLocation": "718:13:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "702:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 882,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "702:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "f43630bd",
									"id": 887,
									"mutability": "mutable",
									"name": "s_balaces",
									"nameLocation": "773:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1180,
									"src": "738:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 886,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 884,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "746:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "738:27:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 885,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "757:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 893,
									"name": "Staked",
									"nameLocation": "795:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "818:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "802:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "840:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 893,
												"src": "824:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "824:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:46:6"
									},
									"src": "789:59:6"
								},
								{
									"anonymous": false,
									"eventSelector": "faf925a2782590ece15b73bcce340ae5a670caabcd87ae54e330c05ab6b92cf4",
									"id": 899,
									"name": "withdrewStake",
									"nameLocation": "859:13:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "889:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "873:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "873:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "911:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "895:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "895:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "872:46:6"
									},
									"src": "853:66:6"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 905,
									"name": "RewardsClaimed",
									"nameLocation": "930:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "961:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "945:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "945:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "983:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 905,
												"src": "967:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "944:46:6"
									},
									"src": "924:67:6"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "1053:130:6",
										"statements": [
											{
												"expression": {
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 912,
														"name": "s_stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "1092:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 914,
																"name": "stakingToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 907,
																"src": "1116:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 913,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1109:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$794_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1109:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"src": "1092:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "1092:37:6"
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 918,
														"name": "s_rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "1139:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 920,
																"name": "rewardsToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "1163:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 919,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "1156:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$794_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1156:20:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"src": "1139:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "1139:37:6"
											}
										]
									},
									"id": 925,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "stakingToken",
												"nameLocation": "1017:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1009:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "rewardsToken",
												"nameLocation": "1039:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1031:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:44:6"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1053:0:6"
									},
									"scope": 1180,
									"src": "997:186:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "1328:360:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 932,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "1341:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1358:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1341:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"nodeType": "IfStatement",
												"src": "1338:76:6",
												"trueBody": {
													"id": 935,
													"nodeType": "Block",
													"src": "1361:53:6",
													"statements": [
														{
															"expression": {
																"id": 933,
																"name": "s_rewarPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "1382:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 929,
															"id": 934,
															"nodeType": "Return",
															"src": "1375:28:6"
														}
													]
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "s_rewarPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "1431:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 941,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"id": 938,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 4294967292,
																									"src": "1456:5:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 939,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "1462:9:6",
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"src": "1456:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"id": 940,
																								"name": "s_lastUpdateTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 871,
																								"src": "1472:16:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1456:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 942,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1455:34:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 943,
																					"name": "REWARD_RATE",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "1490:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1455:46:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31653138",
																				"id": 945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1502:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			},
																			"src": "1455:51:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 947,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1454:53:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 948,
																	"name": "s_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "1508:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1454:67:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 950,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1453:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1431:91:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 929,
												"id": 952,
												"nodeType": "Return",
												"src": "1424:98:6"
											}
										]
									},
									"functionSelector": "cd3daf9d",
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "1282:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1296:2:6"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "1319:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1318:9:6"
									},
									"scope": 1180,
									"src": "1273:415:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1756:245:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"id": 961,
																					"name": "s_balaces",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 887,
																					"src": "1775:9:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 963,
																				"indexExpression": {
																					"id": 962,
																					"name": "account",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "1785:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1775:18:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 969,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 964,
																								"name": "rewardPerToken",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 954,
																								"src": "1795:14:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 965,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "1795:16:6",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"baseExpression": {
																								"id": 966,
																								"name": "s_userRewardPerTokenPaid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 877,
																								"src": "1814:24:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 968,
																							"indexExpression": {
																								"id": 967,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 956,
																								"src": "1839:7:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1814:33:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "1795:52:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 970,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "1794:54:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1775:73:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 972,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1774:75:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31653138",
																	"id": 973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1850:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																},
																"src": "1774:80:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 975,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1773:82:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 976,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "1858:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 978,
														"indexExpression": {
															"id": 977,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "1868:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1858:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1773:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 960,
												"id": 980,
												"nodeType": "Return",
												"src": "1766:110:6"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "1703:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1718:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1710:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1709:17:6"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1747:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1747:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1746:9:6"
									},
									"scope": 1180,
									"src": "1694:307:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "2107:259:6",
										"statements": [
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 996,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2117:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 997,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2132:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2117:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "2117:21:6"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1000,
															"name": "s_balaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2148:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1003,
														"indexExpression": {
															"expression": {
																"id": 1001,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2158:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2162:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2158:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2148:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1004,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "2171:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2148:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2148:29:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1008,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2199:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2203:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2199:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2211:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1007,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 893,
														"src": "2192:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2192:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "EmitStatement",
												"src": "2187:31:6"
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2233:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "2228:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1013,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2228:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1023,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1019,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2275:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_staking_$1180",
																		"typeString": "contract staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_staking_$1180",
																		"typeString": "contract staking"
																	}
																],
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2267:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1017,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2267:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1020,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2267:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1021,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "2282:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1015,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2243:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2258:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "2243:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2243:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2228:61:6"
											},
											{
												"condition": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2302:8:6",
													"subExpression": {
														"id": 1024,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "2303:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "2299:61:6",
												"trueBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "2312:48:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1026,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "2333:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2333:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "RevertStatement",
															"src": "2326:23:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 987,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2061:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2065:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2061:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 989,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 986,
												"name": "updateReward",
												"nameLocations": [
													"2048:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1153,
												"src": "2048:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2048:24:6"
										},
										{
											"id": 991,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 990,
												"name": "nonReentrant",
												"nameLocations": [
													"2073:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "2073:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2073:12:6"
										},
										{
											"arguments": [
												{
													"id": 993,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 984,
													"src": "2099:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 994,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 992,
												"name": "moreThanZero",
												"nameLocations": [
													"2086:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1167,
												"src": "2086:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2086:20:6"
										}
									],
									"name": "stake",
									"nameLocation": "2017:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2031:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "2023:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:16:6"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2107:0:6"
									},
									"scope": 1180,
									"src": "2008:358:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1076,
										"nodeType": "Block",
										"src": "2453:265:6",
										"statements": [
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "s_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "2463:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1044,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "2478:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2463:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2463:21:6"
											},
											{
												"expression": {
													"id": 1052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1047,
															"name": "s_balaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "2494:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1050,
														"indexExpression": {
															"expression": {
																"id": 1048,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2504:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2508:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2504:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2494:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1051,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "2519:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2494:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1053,
												"nodeType": "ExpressionStatement",
												"src": "2494:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1055,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2554:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2558:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2554:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1057,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2566:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1054,
														"name": "withdrewStake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 899,
														"src": "2540:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2540:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1059,
												"nodeType": "EmitStatement",
												"src": "2535:38:6"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2588:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1076,
														"src": "2583:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1060,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2583:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1064,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2622:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2626:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2622:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1066,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2634:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1062,
															"name": "s_stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "2598:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1063,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2613:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "2598:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2598:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2583:58:6"
											},
											{
												"condition": {
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2654:8:6",
													"subExpression": {
														"id": 1069,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2655:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "IfStatement",
												"src": "2651:61:6",
												"trueBody": {
													"id": 1074,
													"nodeType": "Block",
													"src": "2664:48:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1071,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "2685:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2685:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1073,
															"nodeType": "RevertStatement",
															"src": "2678:23:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1077,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1037,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1036,
												"name": "nonReentrant",
												"nameLocations": [
													"2415:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "2415:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2415:12:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1039,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2441:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2445:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2441:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1041,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1038,
												"name": "updateReward",
												"nameLocations": [
													"2428:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1153,
												"src": "2428:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2428:24:6"
										}
									],
									"name": "withdraw",
									"nameLocation": "2381:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2398:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "2390:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2390:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2389:16:6"
									},
									"returnParameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2453:0:6"
									},
									"scope": 1180,
									"src": "2372:346:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "2795:277:6",
										"statements": [
											{
												"assignments": [
													1087
												],
												"declarations": [
													{
														"constant": false,
														"id": 1087,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "2813:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "2805:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1086,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2805:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1092,
												"initialValue": {
													"baseExpression": {
														"id": 1088,
														"name": "s_rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "2822:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1091,
													"indexExpression": {
														"expression": {
															"id": 1089,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2832:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2836:6:6",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2832:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2822:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2805:38:6"
											},
											{
												"expression": {
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1093,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "2853:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1096,
														"indexExpression": {
															"expression": {
																"id": 1094,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2863:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2867:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2863:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2853:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2877:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2853:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "2853:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1101,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2908:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2912:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2908:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2920:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1100,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "2893:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2893:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1105,
												"nodeType": "EmitStatement",
												"src": "2888:39:6"
											},
											{
												"assignments": [
													1107
												],
												"declarations": [
													{
														"constant": false,
														"id": 1107,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2942:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1122,
														"src": "2937:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1106,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2937:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1114,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1110,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2976:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2980:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2976:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1112,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "2988:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1108,
															"name": "s_rewardsToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "2952:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 761,
														"src": "2952:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2952:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2937:58:6"
											},
											{
												"condition": {
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3008:8:6",
													"subExpression": {
														"id": 1115,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "3009:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "3005:61:6",
												"trueBody": {
													"id": 1120,
													"nodeType": "Block",
													"src": "3018:48:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1117,
																	"name": "TransferFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "3039:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3039:16:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1119,
															"nodeType": "RevertStatement",
															"src": "3032:23:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1080,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1079,
												"name": "nonReentrant",
												"nameLocations": [
													"2757:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "2757:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2757:12:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1082,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2783:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2787:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2783:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1081,
												"name": "updateReward",
												"nameLocations": [
													"2770:12:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1153,
												"src": "2770:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2770:24:6"
										}
									],
									"name": "claimReward",
									"nameLocation": "2733:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2744:2:6"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2795:0:6"
									},
									"scope": 1180,
									"src": "2724:348:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1152,
										"nodeType": "Block",
										"src": "3117:225:6",
										"statements": [
											{
												"expression": {
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1127,
														"name": "s_rewarPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3127:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1128,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "3151:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3151:16:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3127:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "3127:40:6"
											},
											{
												"expression": {
													"id": 1135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1132,
														"name": "s_lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "3177:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1133,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3196:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3202:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3196:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3177:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1136,
												"nodeType": "ExpressionStatement",
												"src": "3177:34:6"
											},
											{
												"expression": {
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1137,
															"name": "s_rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "3221:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1139,
														"indexExpression": {
															"id": 1138,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "3231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3221:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1141,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "3249:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1140,
															"name": "earned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 982,
															"src": "3242:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 1142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3242:15:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3221:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "3221:36:6"
											},
											{
												"expression": {
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1145,
															"name": "s_userRewardPerTokenPaid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "3267:24:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1147,
														"indexExpression": {
															"id": 1146,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1125,
															"src": "3292:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3267:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1148,
														"name": "s_rewarPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "3303:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3267:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "3267:57:6"
											},
											{
												"id": 1151,
												"nodeType": "PlaceholderStatement",
												"src": "3334:1:6"
											}
										]
									},
									"id": 1153,
									"name": "updateReward",
									"nameLocation": "3087:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3108:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1153,
												"src": "3100:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3100:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3099:17:6"
									},
									"src": "3078:264:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1166,
										"nodeType": "Block",
										"src": "3386:94:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1157,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "3399:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3409:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3399:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1164,
												"nodeType": "IfStatement",
												"src": "3396:67:6",
												"trueBody": {
													"id": 1163,
													"nodeType": "Block",
													"src": "3412:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1160,
																	"name": "NeedsMoreThanZero",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "3433:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3433:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1162,
															"nodeType": "RevertStatement",
															"src": "3426:26:6"
														}
													]
												}
											},
											{
												"id": 1165,
												"nodeType": "PlaceholderStatement",
												"src": "3472:1:6"
											}
										]
									},
									"id": 1167,
									"name": "moreThanZero",
									"nameLocation": "3357:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3378:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "3370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3369:16:6"
									},
									"src": "3348:132:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1178,
										"nodeType": "Block",
										"src": "3552:42:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1174,
														"name": "s_balaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 887,
														"src": "3569:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1176,
													"indexExpression": {
														"id": 1175,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "3579:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3569:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1173,
												"id": 1177,
												"nodeType": "Return",
												"src": "3562:25:6"
											}
										]
									},
									"functionSelector": "399080ec",
									"id": 1179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStaked",
									"nameLocation": "3495:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3513:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "3505:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3505:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3504:17:6"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "3543:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3543:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3542:9:6"
									},
									"scope": 1180,
									"src": "3486:108:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1181,
							"src": "288:3308:6",
							"usedErrors": [
								856,
								858
							],
							"usedEvents": [
								893,
								899,
								905
							]
						}
					],
					"src": "36:3561:6"
				},
				"id": 6
			}
		}
	}
}